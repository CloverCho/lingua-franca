/**
 * Concurrency benchmark from the Savina benchmark suite.
 * See https://shamsimam.github.io/papers/2014-agere-savina.pdf.
 * 
 * Based on the version BankingAkkaManualStashActorBenchmark.scala
 * from the Savina suite.
 * 
 * @author Hannes Klein
 */

/* [[[cog
# This file is a code generator using the python module cog:
# See https://nedbatchelder.com/code/cog/
#
# All instructions for code  generation are in-lined in comments
# like this one. With that you can use this file as a normal source file
# but also to generate code.
# 
# To change the generated code in-line within this file run:
# $ python -m cog -r this-file.lf
# To generate a new file from this file stripping the generator code in the process run:
# $ python -m cog -d -o output-file.lf this-file.lf
#
# Use the command line option -D to specify generator parameters, for example:
# $ python -m cog -r -D parameter=100 this-file.lf
#
# Generator parameters used in this file:
# -D numAccounts=30
# 
]]] */
// [[[end]]]

/* [[[cog
  # force existence, type and default values of generator parameters
  if 'numAccounts' in globals():
    numAccounts = int(numAccounts)
  else:
    globals()['numAccounts'] = 30
  
  # output the current value of the generator parameters used in the last generation run
  cog.outl(f'// Generated file with the following parameters:')
  cog.outl(f'// numAccounts = {numAccounts}')
]]] */
// Generated file with the following parameters:
// numAccounts = 30
// [[[end]]]

target Cpp {
    cmake-include: "../IncludeHeaders.cmake",
    build-type : RelWithDebInfo
};

import BenchmarkRunner from "../BenchmarkRunner.lf";


public preamble {=
    enum MsgType {
      StartMsg,
      StopMsg,
      ReplyMsg,
      DebitMsg,
      CreditMsg
    };
    
    struct Message {
    
      MsgType type;
      double amount;
      int recipient;
    
      Message(MsgType _type, double _amount, int _recipient):
        type(_type), amount(_amount), recipient(_recipient) {}
    
      Message() {}
    
      Message(MsgType _type):
        type(_type) {}
    };
=}

reactor Teller(numAccounts:int(1000), numBankings:int(50000)) {
    
    public preamble {=
        #include "PseudoRandom.hh"
    =}
    
    state numCompletedBankings:int;
    state randomGen:{=PseudoRandom=};
    state numWorkGenerated:int(0);
    state nextGeneratedWorkMsg:{=reactor::ImmutableValuePtr<Message>=};
    state nextGeneratedWorkSrcAccountId:int;
    
    state inAccounts:{=std::vector<reactor::Input<Message> *>=};
    state outAccounts:{=std::vector<reactor::Output<Message> *>=};
    
    input inStart:void;
    output outFinished:void;
    
    /* [[[cog
      for i in range(numAccounts):
        cog.outl(f'output outAccount{i}:{{=Message=}};')
        cog.outl(f'input inAccount{i}:{{=Message=}};')
    ]]] */
    output outAccount0:{=Message=};
    input inAccount0:{=Message=};
    output outAccount1:{=Message=};
    input inAccount1:{=Message=};
    output outAccount2:{=Message=};
    input inAccount2:{=Message=};
    output outAccount3:{=Message=};
    input inAccount3:{=Message=};
    output outAccount4:{=Message=};
    input inAccount4:{=Message=};
    output outAccount5:{=Message=};
    input inAccount5:{=Message=};
    output outAccount6:{=Message=};
    input inAccount6:{=Message=};
    output outAccount7:{=Message=};
    input inAccount7:{=Message=};
    output outAccount8:{=Message=};
    input inAccount8:{=Message=};
    output outAccount9:{=Message=};
    input inAccount9:{=Message=};
    output outAccount10:{=Message=};
    input inAccount10:{=Message=};
    output outAccount11:{=Message=};
    input inAccount11:{=Message=};
    output outAccount12:{=Message=};
    input inAccount12:{=Message=};
    output outAccount13:{=Message=};
    input inAccount13:{=Message=};
    output outAccount14:{=Message=};
    input inAccount14:{=Message=};
    output outAccount15:{=Message=};
    input inAccount15:{=Message=};
    output outAccount16:{=Message=};
    input inAccount16:{=Message=};
    output outAccount17:{=Message=};
    input inAccount17:{=Message=};
    output outAccount18:{=Message=};
    input inAccount18:{=Message=};
    output outAccount19:{=Message=};
    input inAccount19:{=Message=};
    output outAccount20:{=Message=};
    input inAccount20:{=Message=};
    output outAccount21:{=Message=};
    input inAccount21:{=Message=};
    output outAccount22:{=Message=};
    input inAccount22:{=Message=};
    output outAccount23:{=Message=};
    input inAccount23:{=Message=};
    output outAccount24:{=Message=};
    input inAccount24:{=Message=};
    output outAccount25:{=Message=};
    input inAccount25:{=Message=};
    output outAccount26:{=Message=};
    input inAccount26:{=Message=};
    output outAccount27:{=Message=};
    input inAccount27:{=Message=};
    output outAccount28:{=Message=};
    input inAccount28:{=Message=};
    output outAccount29:{=Message=};
    input inAccount29:{=Message=};
    // [[[end]]]
    
    logical action generateWork:void;
    
    reaction(startup) {=
        
        // one time initializations
        
        /* [[[cog
          cog.outl(f'inAccounts = std::vector<reactor::Input<Message> *>({numAccounts});')
          cog.outl(f'outAccounts = std::vector<reactor::Output<Message> *>({numAccounts});')
          for i in range(numAccounts):
            cog.outl(f'inAccounts[{i}] = &inAccount{i};')
            cog.outl(f'outAccounts[{i}] = &outAccount{i};')
        ]]] */
        inAccounts = std::vector<reactor::Input<Message> *>(30);
        outAccounts = std::vector<reactor::Output<Message> *>(30);
        inAccounts[0] = &inAccount0;
        outAccounts[0] = &outAccount0;
        inAccounts[1] = &inAccount1;
        outAccounts[1] = &outAccount1;
        inAccounts[2] = &inAccount2;
        outAccounts[2] = &outAccount2;
        inAccounts[3] = &inAccount3;
        outAccounts[3] = &outAccount3;
        inAccounts[4] = &inAccount4;
        outAccounts[4] = &outAccount4;
        inAccounts[5] = &inAccount5;
        outAccounts[5] = &outAccount5;
        inAccounts[6] = &inAccount6;
        outAccounts[6] = &outAccount6;
        inAccounts[7] = &inAccount7;
        outAccounts[7] = &outAccount7;
        inAccounts[8] = &inAccount8;
        outAccounts[8] = &outAccount8;
        inAccounts[9] = &inAccount9;
        outAccounts[9] = &outAccount9;
        inAccounts[10] = &inAccount10;
        outAccounts[10] = &outAccount10;
        inAccounts[11] = &inAccount11;
        outAccounts[11] = &outAccount11;
        inAccounts[12] = &inAccount12;
        outAccounts[12] = &outAccount12;
        inAccounts[13] = &inAccount13;
        outAccounts[13] = &outAccount13;
        inAccounts[14] = &inAccount14;
        outAccounts[14] = &outAccount14;
        inAccounts[15] = &inAccount15;
        outAccounts[15] = &outAccount15;
        inAccounts[16] = &inAccount16;
        outAccounts[16] = &outAccount16;
        inAccounts[17] = &inAccount17;
        outAccounts[17] = &outAccount17;
        inAccounts[18] = &inAccount18;
        outAccounts[18] = &outAccount18;
        inAccounts[19] = &inAccount19;
        outAccounts[19] = &outAccount19;
        inAccounts[20] = &inAccount20;
        outAccounts[20] = &outAccount20;
        inAccounts[21] = &inAccount21;
        outAccounts[21] = &outAccount21;
        inAccounts[22] = &inAccount22;
        outAccounts[22] = &outAccount22;
        inAccounts[23] = &inAccount23;
        outAccounts[23] = &outAccount23;
        inAccounts[24] = &inAccount24;
        outAccounts[24] = &outAccount24;
        inAccounts[25] = &inAccount25;
        outAccounts[25] = &outAccount25;
        inAccounts[26] = &inAccount26;
        outAccounts[26] = &outAccount26;
        inAccounts[27] = &inAccount27;
        outAccounts[27] = &outAccount27;
        inAccounts[28] = &inAccount28;
        outAccounts[28] = &outAccount28;
        inAccounts[29] = &inAccount29;
        outAccounts[29] = &outAccount29;
        // [[[end]]]
    =}
    
    reaction(inStart) -> generateWork {=
        
        // reset local state
        numCompletedBankings = 0;
        randomGen = PseudoRandom(123456);
        numWorkGenerated = 0;
        nextGeneratedWorkMsg = reactor::ImmutableValuePtr<Message>();
        nextGeneratedWorkSrcAccountId = -1;
        
        // start execution
        generateWork.schedule();
    =}
    
    reaction(generateWork) ->
      generateWork,
      /* [[[cog
        for i in range(numAccounts):
          cog.out(f'outAccount{i}')
          if(i < numAccounts-1):
            cog.outl(',')
          else:
            cog.outl('')
      ]]] */
      outAccount0,
      outAccount1,
      outAccount2,
      outAccount3,
      outAccount4,
      outAccount5,
      outAccount6,
      outAccount7,
      outAccount8,
      outAccount9,
      outAccount10,
      outAccount11,
      outAccount12,
      outAccount13,
      outAccount14,
      outAccount15,
      outAccount16,
      outAccount17,
      outAccount18,
      outAccount19,
      outAccount20,
      outAccount21,
      outAccount22,
      outAccount23,
      outAccount24,
      outAccount25,
      outAccount26,
      outAccount27,
      outAccount28,
      outAccount29
      // [[[end]]]
    {=
        
        if(numWorkGenerated >= numBankings) {
            return;
        }
        
        std::set<int> accountsWorkGeneratedFor;
        
        if(nextGeneratedWorkMsg != nullptr) {
            outAccounts[nextGeneratedWorkSrcAccountId]->set(nextGeneratedWorkMsg);
            accountsWorkGeneratedFor.insert(nextGeneratedWorkSrcAccountId);
            numWorkGenerated += 1;
        }
        
        // Generate work for accounts until no more work to
        // generate or work is genrated for an account that
        // already has work.
        while(numWorkGenerated < numBankings) {
            // src is lower than dest id to ensure there is never a deadlock
            int srcAccountId = randomGen.nextInt((outAccounts.size() / 10) * 8);
            nextGeneratedWorkSrcAccountId = srcAccountId;
            int loopId = randomGen.nextInt(outAccounts.size() - srcAccountId);
            if(loopId == 0) {
                loopId += 1;
            }
            int destAccountId = srcAccountId + loopId;
            
            double amount = abs(randomGen.nextDouble()) * 1000;
            
            auto ret = accountsWorkGeneratedFor.insert(srcAccountId);
            nextGeneratedWorkMsg = reactor::make_immutable_value<Message>(CreditMsg, amount, destAccountId);
            if(ret.second) {
                outAccounts[srcAccountId]->set(nextGeneratedWorkMsg);
                numWorkGenerated += 1;
            } else {
                break;
            }
        }
        
        generateWork.schedule();
    =}
    
    reaction(
        /* [[[cog
          for i in range(numAccounts):
            cog.out(f'inAccount{i}')
            if(i < numAccounts-1):
              cog.outl(',')
            else:
              cog.outl('')
        ]]] */
        inAccount0,
        inAccount1,
        inAccount2,
        inAccount3,
        inAccount4,
        inAccount5,
        inAccount6,
        inAccount7,
        inAccount8,
        inAccount9,
        inAccount10,
        inAccount11,
        inAccount12,
        inAccount13,
        inAccount14,
        inAccount15,
        inAccount16,
        inAccount17,
        inAccount18,
        inAccount19,
        inAccount20,
        inAccount21,
        inAccount22,
        inAccount23,
        inAccount24,
        inAccount25,
        inAccount26,
        inAccount27,
        inAccount28,
        inAccount29
        // [[[end]]]
    ) -> 
      outFinished,
      /* [[[cog
        for i in range(numAccounts):
          cog.out(f'outAccount{i}')
          if(i < numAccounts-1):
            cog.outl(',')
          else:
            cog.outl('')
      ]]] */
      outAccount0,
      outAccount1,
      outAccount2,
      outAccount3,
      outAccount4,
      outAccount5,
      outAccount6,
      outAccount7,
      outAccount8,
      outAccount9,
      outAccount10,
      outAccount11,
      outAccount12,
      outAccount13,
      outAccount14,
      outAccount15,
      outAccount16,
      outAccount17,
      outAccount18,
      outAccount19,
      outAccount20,
      outAccount21,
      outAccount22,
      outAccount23,
      outAccount24,
      outAccount25,
      outAccount26,
      outAccount27,
      outAccount28,
      outAccount29
      // [[[end]]]
    {=
        
        for(int i = 0; i < inAccounts.size(); ++i) {
            if(inAccounts[i]->is_present()) {
                if(inAccounts[i]->get()->type == ReplyMsg) {
                    
                    numCompletedBankings += 1;
                    if(numCompletedBankings == numBankings) {
                        for(int i = 0; i < outAccounts.size(); ++i) {
                            outAccounts[i]->set(Message{StopMsg});
                        }
                        outFinished.set();
                    }
                }
            }
        }
    =}
}


/** 
 * Intra-reactor-bank communication between Account reactors is prone
 * to deadlocks if two send each other CreditMsg at the same point
 * in logical time. This is prevented in the Teller-reactor that
 * generates DebitMsg according to an ordering.
 */
reactor Account(id:int(-1), initialBalance:double(0.0)) {
    
    public preamble {=
        #include "PseudoRandom.hh"
        #include <list>
        #include "reactor-cpp/logging.hh"
    =}
    
    state numCompletedBankings:int(0);
    state randomGen:{=PseudoRandom=};
    state balance:double(initialBalance);
    state stashedMessages:{=std::list<reactor::ImmutableValuePtr<Message>>=};
    state inReplyMode:bool(false);
    
    state inAccounts:{=std::vector<reactor::Input<Message> *>=};
    state outAccounts:{=std::vector<reactor::Output<Message> *>=};
    
    input inTeller:{=Message=};
    output outTeller:{=Message=};
    
    /* [[[cog
      for i in range(numAccounts):
        cog.outl(f'output outAccount{i}:{{=Message=}};')
        cog.outl(f'input inAccount{i}:{{=Message=}};')
    ]]] */
    output outAccount0:{=Message=};
    input inAccount0:{=Message=};
    output outAccount1:{=Message=};
    input inAccount1:{=Message=};
    output outAccount2:{=Message=};
    input inAccount2:{=Message=};
    output outAccount3:{=Message=};
    input inAccount3:{=Message=};
    output outAccount4:{=Message=};
    input inAccount4:{=Message=};
    output outAccount5:{=Message=};
    input inAccount5:{=Message=};
    output outAccount6:{=Message=};
    input inAccount6:{=Message=};
    output outAccount7:{=Message=};
    input inAccount7:{=Message=};
    output outAccount8:{=Message=};
    input inAccount8:{=Message=};
    output outAccount9:{=Message=};
    input inAccount9:{=Message=};
    output outAccount10:{=Message=};
    input inAccount10:{=Message=};
    output outAccount11:{=Message=};
    input inAccount11:{=Message=};
    output outAccount12:{=Message=};
    input inAccount12:{=Message=};
    output outAccount13:{=Message=};
    input inAccount13:{=Message=};
    output outAccount14:{=Message=};
    input inAccount14:{=Message=};
    output outAccount15:{=Message=};
    input inAccount15:{=Message=};
    output outAccount16:{=Message=};
    input inAccount16:{=Message=};
    output outAccount17:{=Message=};
    input inAccount17:{=Message=};
    output outAccount18:{=Message=};
    input inAccount18:{=Message=};
    output outAccount19:{=Message=};
    input inAccount19:{=Message=};
    output outAccount20:{=Message=};
    input inAccount20:{=Message=};
    output outAccount21:{=Message=};
    input inAccount21:{=Message=};
    output outAccount22:{=Message=};
    input inAccount22:{=Message=};
    output outAccount23:{=Message=};
    input inAccount23:{=Message=};
    output outAccount24:{=Message=};
    input inAccount24:{=Message=};
    output outAccount25:{=Message=};
    input inAccount25:{=Message=};
    output outAccount26:{=Message=};
    input inAccount26:{=Message=};
    output outAccount27:{=Message=};
    input inAccount27:{=Message=};
    output outAccount28:{=Message=};
    input inAccount28:{=Message=};
    output outAccount29:{=Message=};
    input inAccount29:{=Message=};
    // [[[end]]]
    
    logical action handleMessage:void;
    
    reaction(startup) {=
        // one time init
        numCompletedBankings = 0;
        randomGen = PseudoRandom(123456);
        balance = initialBalance;
        stashedMessages = std::list<reactor::ImmutableValuePtr<Message>>();
        inReplyMode = false;
        
        /* [[[cog
          cog.outl(f'inAccounts = std::vector<reactor::Input<Message> *>({numAccounts});')
          cog.outl(f'outAccounts = std::vector<reactor::Output<Message> *>({numAccounts});')
          for i in range(numAccounts):
            cog.outl(f'inAccounts[{i}] = &inAccount{i};')
            cog.outl(f'outAccounts[{i}] = &outAccount{i};')
        ]]] */
        inAccounts = std::vector<reactor::Input<Message> *>(30);
        outAccounts = std::vector<reactor::Output<Message> *>(30);
        inAccounts[0] = &inAccount0;
        outAccounts[0] = &outAccount0;
        inAccounts[1] = &inAccount1;
        outAccounts[1] = &outAccount1;
        inAccounts[2] = &inAccount2;
        outAccounts[2] = &outAccount2;
        inAccounts[3] = &inAccount3;
        outAccounts[3] = &outAccount3;
        inAccounts[4] = &inAccount4;
        outAccounts[4] = &outAccount4;
        inAccounts[5] = &inAccount5;
        outAccounts[5] = &outAccount5;
        inAccounts[6] = &inAccount6;
        outAccounts[6] = &outAccount6;
        inAccounts[7] = &inAccount7;
        outAccounts[7] = &outAccount7;
        inAccounts[8] = &inAccount8;
        outAccounts[8] = &outAccount8;
        inAccounts[9] = &inAccount9;
        outAccounts[9] = &outAccount9;
        inAccounts[10] = &inAccount10;
        outAccounts[10] = &outAccount10;
        inAccounts[11] = &inAccount11;
        outAccounts[11] = &outAccount11;
        inAccounts[12] = &inAccount12;
        outAccounts[12] = &outAccount12;
        inAccounts[13] = &inAccount13;
        outAccounts[13] = &outAccount13;
        inAccounts[14] = &inAccount14;
        outAccounts[14] = &outAccount14;
        inAccounts[15] = &inAccount15;
        outAccounts[15] = &outAccount15;
        inAccounts[16] = &inAccount16;
        outAccounts[16] = &outAccount16;
        inAccounts[17] = &inAccount17;
        outAccounts[17] = &outAccount17;
        inAccounts[18] = &inAccount18;
        outAccounts[18] = &outAccount18;
        inAccounts[19] = &inAccount19;
        outAccounts[19] = &outAccount19;
        inAccounts[20] = &inAccount20;
        outAccounts[20] = &outAccount20;
        inAccounts[21] = &inAccount21;
        outAccounts[21] = &outAccount21;
        inAccounts[22] = &inAccount22;
        outAccounts[22] = &outAccount22;
        inAccounts[23] = &inAccount23;
        outAccounts[23] = &outAccount23;
        inAccounts[24] = &inAccount24;
        outAccounts[24] = &outAccount24;
        inAccounts[25] = &inAccount25;
        outAccounts[25] = &outAccount25;
        inAccounts[26] = &inAccount26;
        outAccounts[26] = &outAccount26;
        inAccounts[27] = &inAccount27;
        outAccounts[27] = &outAccount27;
        inAccounts[28] = &inAccount28;
        outAccounts[28] = &outAccount28;
        inAccounts[29] = &inAccount29;
        outAccounts[29] = &outAccount29;
        // [[[end]]]
    =}
    
    reaction(handleMessage) ->
      outTeller,
      /* [[[cog
        for i in range(numAccounts):
          cog.out(f'outAccount{i}')
          if(i < numAccounts-1):
            cog.outl(',')
          else:
            cog.outl('')
      ]]] */
      outAccount0,
      outAccount1,
      outAccount2,
      outAccount3,
      outAccount4,
      outAccount5,
      outAccount6,
      outAccount7,
      outAccount8,
      outAccount9,
      outAccount10,
      outAccount11,
      outAccount12,
      outAccount13,
      outAccount14,
      outAccount15,
      outAccount16,
      outAccount17,
      outAccount18,
      outAccount19,
      outAccount20,
      outAccount21,
      outAccount22,
      outAccount23,
      outAccount24,
      outAccount25,
      outAccount26,
      outAccount27,
      outAccount28,
      outAccount29
      // [[[end]]]
    {=
        
        if(stashedMessages.empty()) {
            return;
        }
        
        if(inReplyMode) {
            
            auto reply = std::find_if(std::begin(stashedMessages), std::end(stashedMessages),
                [](reactor::ImmutableValuePtr<Message>& msg) { return (msg->type == ReplyMsg); }
            );
            if(reply == std::end(stashedMessages)) {
                // reply not received yet
            } else {
                // reply received
                inReplyMode = false;
                stashedMessages.erase(reply);
                outTeller.set(Message{ReplyMsg});
            }
            
        } else { // inReplyMode == false
            
            if(stashedMessages.front()->type == DebitMsg) {
                
                balance += stashedMessages.front()->amount;
                outAccounts[stashedMessages.front()->recipient]->set(Message{ReplyMsg});
                stashedMessages.pop_front();
                
            } else if(stashedMessages.front()->type == CreditMsg) {
                
                balance -= stashedMessages.front()->amount;
                int destAccount = stashedMessages.front()->recipient;
                outAccounts[destAccount]->set(Message{DebitMsg, stashedMessages.front()->amount, id});
                inReplyMode = true;
                stashedMessages.pop_front();
                
            } else if(stashedMessages.front()->type == StopMsg) {
                
                stashedMessages.pop_front();
                if(!stashedMessages.empty()) {
                    reactor::log::Info() << "Stop message received, but message queue not empty in account " << id;
                }
                // reset local state
                numCompletedBankings = 0;
                randomGen = PseudoRandom(123456);
                balance = initialBalance;
                stashedMessages = std::list<reactor::ImmutableValuePtr<Message>>();
                inReplyMode = false;
                return; // don't schedule
            }
        }
        
        handleMessage.schedule();
    =}
    
    reaction(
        /* [[[cog
          for i in range(numAccounts):
            cog.out(f'inAccount{i}')
            if(i < numAccounts-1):
              cog.outl(',')
            else:
              cog.outl('')
        ]]] */
        inAccount0,
        inAccount1,
        inAccount2,
        inAccount3,
        inAccount4,
        inAccount5,
        inAccount6,
        inAccount7,
        inAccount8,
        inAccount9,
        inAccount10,
        inAccount11,
        inAccount12,
        inAccount13,
        inAccount14,
        inAccount15,
        inAccount16,
        inAccount17,
        inAccount18,
        inAccount19,
        inAccount20,
        inAccount21,
        inAccount22,
        inAccount23,
        inAccount24,
        inAccount25,
        inAccount26,
        inAccount27,
        inAccount28,
        inAccount29
        // [[[end]]]
    ) -> handleMessage {=
        
        for(int i = 0; i < inAccounts.size(); ++i) {
            if(inAccounts[i]->is_present()) {
                stashedMessages.push_back(inAccounts[i]->get());
            }
        }
        handleMessage.schedule();
    =}
    
    reaction(inTeller) -> handleMessage {=
        stashedMessages.push_back(inTeller.get());
        handleMessage.schedule();
    =}
}


main reactor BankingBenchmark(numIterations:int(12), numTransactions:int(50000)) {
    
    /* [[[cog
      cog.outl(f'teller = new Teller(numAccounts={numAccounts}, numBankings=numTransactions);')
    ]]] */
    teller = new Teller(numAccounts=30, numBankings=numTransactions);
    // [[[end]]]
    runner = new BenchmarkRunner(numIterations=numIterations);
    
    runner.outIterationStart -> teller.inStart;
    teller.outFinished -> runner.inIterationFinish;
    
    reaction(startup) -> runner.inStart {=
        printBenchmarkInfo("BankingReactorLFCppBenchmark");
        /* [[[cog
          cog.outl(f'printArgs("numIterations", numIterations, "numTransactions", numTransactions, "numAccounts", {numAccounts});')
        ]]] */
        printArgs("numIterations", numIterations, "numTransactions", numTransactions, "numAccounts", 30);
        /// [[[end]]]
        printSystemInfo();
        runner.inStart.set();
    =}
    
    /* [[[cog
      for i in range(numAccounts):
        cog.outl(f'account{i} = new Account(id={i}, initialBalance={{=std::numeric_limits<double>::max() / ({numAccounts} * numTransactions)=}});')
    ]]] */
    account0 = new Account(id=0, initialBalance={=std::numeric_limits<double>::max() / (30 * numTransactions)=});
    account1 = new Account(id=1, initialBalance={=std::numeric_limits<double>::max() / (30 * numTransactions)=});
    account2 = new Account(id=2, initialBalance={=std::numeric_limits<double>::max() / (30 * numTransactions)=});
    account3 = new Account(id=3, initialBalance={=std::numeric_limits<double>::max() / (30 * numTransactions)=});
    account4 = new Account(id=4, initialBalance={=std::numeric_limits<double>::max() / (30 * numTransactions)=});
    account5 = new Account(id=5, initialBalance={=std::numeric_limits<double>::max() / (30 * numTransactions)=});
    account6 = new Account(id=6, initialBalance={=std::numeric_limits<double>::max() / (30 * numTransactions)=});
    account7 = new Account(id=7, initialBalance={=std::numeric_limits<double>::max() / (30 * numTransactions)=});
    account8 = new Account(id=8, initialBalance={=std::numeric_limits<double>::max() / (30 * numTransactions)=});
    account9 = new Account(id=9, initialBalance={=std::numeric_limits<double>::max() / (30 * numTransactions)=});
    account10 = new Account(id=10, initialBalance={=std::numeric_limits<double>::max() / (30 * numTransactions)=});
    account11 = new Account(id=11, initialBalance={=std::numeric_limits<double>::max() / (30 * numTransactions)=});
    account12 = new Account(id=12, initialBalance={=std::numeric_limits<double>::max() / (30 * numTransactions)=});
    account13 = new Account(id=13, initialBalance={=std::numeric_limits<double>::max() / (30 * numTransactions)=});
    account14 = new Account(id=14, initialBalance={=std::numeric_limits<double>::max() / (30 * numTransactions)=});
    account15 = new Account(id=15, initialBalance={=std::numeric_limits<double>::max() / (30 * numTransactions)=});
    account16 = new Account(id=16, initialBalance={=std::numeric_limits<double>::max() / (30 * numTransactions)=});
    account17 = new Account(id=17, initialBalance={=std::numeric_limits<double>::max() / (30 * numTransactions)=});
    account18 = new Account(id=18, initialBalance={=std::numeric_limits<double>::max() / (30 * numTransactions)=});
    account19 = new Account(id=19, initialBalance={=std::numeric_limits<double>::max() / (30 * numTransactions)=});
    account20 = new Account(id=20, initialBalance={=std::numeric_limits<double>::max() / (30 * numTransactions)=});
    account21 = new Account(id=21, initialBalance={=std::numeric_limits<double>::max() / (30 * numTransactions)=});
    account22 = new Account(id=22, initialBalance={=std::numeric_limits<double>::max() / (30 * numTransactions)=});
    account23 = new Account(id=23, initialBalance={=std::numeric_limits<double>::max() / (30 * numTransactions)=});
    account24 = new Account(id=24, initialBalance={=std::numeric_limits<double>::max() / (30 * numTransactions)=});
    account25 = new Account(id=25, initialBalance={=std::numeric_limits<double>::max() / (30 * numTransactions)=});
    account26 = new Account(id=26, initialBalance={=std::numeric_limits<double>::max() / (30 * numTransactions)=});
    account27 = new Account(id=27, initialBalance={=std::numeric_limits<double>::max() / (30 * numTransactions)=});
    account28 = new Account(id=28, initialBalance={=std::numeric_limits<double>::max() / (30 * numTransactions)=});
    account29 = new Account(id=29, initialBalance={=std::numeric_limits<double>::max() / (30 * numTransactions)=});
    // [[[end]]]
    
    // connect teller with accounts
    /* [[[cog
      for i in range(numAccounts):
        cog.outl(f'teller.outAccount{i} -> account{i}.inTeller;')
        cog.outl(f'account{i}.outTeller -> teller.inAccount{i};')
    ]]] */
    teller.outAccount0 -> account0.inTeller;
    account0.outTeller -> teller.inAccount0;
    teller.outAccount1 -> account1.inTeller;
    account1.outTeller -> teller.inAccount1;
    teller.outAccount2 -> account2.inTeller;
    account2.outTeller -> teller.inAccount2;
    teller.outAccount3 -> account3.inTeller;
    account3.outTeller -> teller.inAccount3;
    teller.outAccount4 -> account4.inTeller;
    account4.outTeller -> teller.inAccount4;
    teller.outAccount5 -> account5.inTeller;
    account5.outTeller -> teller.inAccount5;
    teller.outAccount6 -> account6.inTeller;
    account6.outTeller -> teller.inAccount6;
    teller.outAccount7 -> account7.inTeller;
    account7.outTeller -> teller.inAccount7;
    teller.outAccount8 -> account8.inTeller;
    account8.outTeller -> teller.inAccount8;
    teller.outAccount9 -> account9.inTeller;
    account9.outTeller -> teller.inAccount9;
    teller.outAccount10 -> account10.inTeller;
    account10.outTeller -> teller.inAccount10;
    teller.outAccount11 -> account11.inTeller;
    account11.outTeller -> teller.inAccount11;
    teller.outAccount12 -> account12.inTeller;
    account12.outTeller -> teller.inAccount12;
    teller.outAccount13 -> account13.inTeller;
    account13.outTeller -> teller.inAccount13;
    teller.outAccount14 -> account14.inTeller;
    account14.outTeller -> teller.inAccount14;
    teller.outAccount15 -> account15.inTeller;
    account15.outTeller -> teller.inAccount15;
    teller.outAccount16 -> account16.inTeller;
    account16.outTeller -> teller.inAccount16;
    teller.outAccount17 -> account17.inTeller;
    account17.outTeller -> teller.inAccount17;
    teller.outAccount18 -> account18.inTeller;
    account18.outTeller -> teller.inAccount18;
    teller.outAccount19 -> account19.inTeller;
    account19.outTeller -> teller.inAccount19;
    teller.outAccount20 -> account20.inTeller;
    account20.outTeller -> teller.inAccount20;
    teller.outAccount21 -> account21.inTeller;
    account21.outTeller -> teller.inAccount21;
    teller.outAccount22 -> account22.inTeller;
    account22.outTeller -> teller.inAccount22;
    teller.outAccount23 -> account23.inTeller;
    account23.outTeller -> teller.inAccount23;
    teller.outAccount24 -> account24.inTeller;
    account24.outTeller -> teller.inAccount24;
    teller.outAccount25 -> account25.inTeller;
    account25.outTeller -> teller.inAccount25;
    teller.outAccount26 -> account26.inTeller;
    account26.outTeller -> teller.inAccount26;
    teller.outAccount27 -> account27.inTeller;
    account27.outTeller -> teller.inAccount27;
    teller.outAccount28 -> account28.inTeller;
    account28.outTeller -> teller.inAccount28;
    teller.outAccount29 -> account29.inTeller;
    account29.outTeller -> teller.inAccount29;
    // [[[end]]]
    
    // connect accounts as a clique
    /* [[[cog
      for i in range(numAccounts):
        for j in range(numAccounts):
          cog.outl(f'account{i}.outAccount{j} -> account{j}.inAccount{i};')
        cog.outl('')
    ]]] */
    account0.outAccount0 -> account0.inAccount0;
    account0.outAccount1 -> account1.inAccount0;
    account0.outAccount2 -> account2.inAccount0;
    account0.outAccount3 -> account3.inAccount0;
    account0.outAccount4 -> account4.inAccount0;
    account0.outAccount5 -> account5.inAccount0;
    account0.outAccount6 -> account6.inAccount0;
    account0.outAccount7 -> account7.inAccount0;
    account0.outAccount8 -> account8.inAccount0;
    account0.outAccount9 -> account9.inAccount0;
    account0.outAccount10 -> account10.inAccount0;
    account0.outAccount11 -> account11.inAccount0;
    account0.outAccount12 -> account12.inAccount0;
    account0.outAccount13 -> account13.inAccount0;
    account0.outAccount14 -> account14.inAccount0;
    account0.outAccount15 -> account15.inAccount0;
    account0.outAccount16 -> account16.inAccount0;
    account0.outAccount17 -> account17.inAccount0;
    account0.outAccount18 -> account18.inAccount0;
    account0.outAccount19 -> account19.inAccount0;
    account0.outAccount20 -> account20.inAccount0;
    account0.outAccount21 -> account21.inAccount0;
    account0.outAccount22 -> account22.inAccount0;
    account0.outAccount23 -> account23.inAccount0;
    account0.outAccount24 -> account24.inAccount0;
    account0.outAccount25 -> account25.inAccount0;
    account0.outAccount26 -> account26.inAccount0;
    account0.outAccount27 -> account27.inAccount0;
    account0.outAccount28 -> account28.inAccount0;
    account0.outAccount29 -> account29.inAccount0;

    account1.outAccount0 -> account0.inAccount1;
    account1.outAccount1 -> account1.inAccount1;
    account1.outAccount2 -> account2.inAccount1;
    account1.outAccount3 -> account3.inAccount1;
    account1.outAccount4 -> account4.inAccount1;
    account1.outAccount5 -> account5.inAccount1;
    account1.outAccount6 -> account6.inAccount1;
    account1.outAccount7 -> account7.inAccount1;
    account1.outAccount8 -> account8.inAccount1;
    account1.outAccount9 -> account9.inAccount1;
    account1.outAccount10 -> account10.inAccount1;
    account1.outAccount11 -> account11.inAccount1;
    account1.outAccount12 -> account12.inAccount1;
    account1.outAccount13 -> account13.inAccount1;
    account1.outAccount14 -> account14.inAccount1;
    account1.outAccount15 -> account15.inAccount1;
    account1.outAccount16 -> account16.inAccount1;
    account1.outAccount17 -> account17.inAccount1;
    account1.outAccount18 -> account18.inAccount1;
    account1.outAccount19 -> account19.inAccount1;
    account1.outAccount20 -> account20.inAccount1;
    account1.outAccount21 -> account21.inAccount1;
    account1.outAccount22 -> account22.inAccount1;
    account1.outAccount23 -> account23.inAccount1;
    account1.outAccount24 -> account24.inAccount1;
    account1.outAccount25 -> account25.inAccount1;
    account1.outAccount26 -> account26.inAccount1;
    account1.outAccount27 -> account27.inAccount1;
    account1.outAccount28 -> account28.inAccount1;
    account1.outAccount29 -> account29.inAccount1;

    account2.outAccount0 -> account0.inAccount2;
    account2.outAccount1 -> account1.inAccount2;
    account2.outAccount2 -> account2.inAccount2;
    account2.outAccount3 -> account3.inAccount2;
    account2.outAccount4 -> account4.inAccount2;
    account2.outAccount5 -> account5.inAccount2;
    account2.outAccount6 -> account6.inAccount2;
    account2.outAccount7 -> account7.inAccount2;
    account2.outAccount8 -> account8.inAccount2;
    account2.outAccount9 -> account9.inAccount2;
    account2.outAccount10 -> account10.inAccount2;
    account2.outAccount11 -> account11.inAccount2;
    account2.outAccount12 -> account12.inAccount2;
    account2.outAccount13 -> account13.inAccount2;
    account2.outAccount14 -> account14.inAccount2;
    account2.outAccount15 -> account15.inAccount2;
    account2.outAccount16 -> account16.inAccount2;
    account2.outAccount17 -> account17.inAccount2;
    account2.outAccount18 -> account18.inAccount2;
    account2.outAccount19 -> account19.inAccount2;
    account2.outAccount20 -> account20.inAccount2;
    account2.outAccount21 -> account21.inAccount2;
    account2.outAccount22 -> account22.inAccount2;
    account2.outAccount23 -> account23.inAccount2;
    account2.outAccount24 -> account24.inAccount2;
    account2.outAccount25 -> account25.inAccount2;
    account2.outAccount26 -> account26.inAccount2;
    account2.outAccount27 -> account27.inAccount2;
    account2.outAccount28 -> account28.inAccount2;
    account2.outAccount29 -> account29.inAccount2;

    account3.outAccount0 -> account0.inAccount3;
    account3.outAccount1 -> account1.inAccount3;
    account3.outAccount2 -> account2.inAccount3;
    account3.outAccount3 -> account3.inAccount3;
    account3.outAccount4 -> account4.inAccount3;
    account3.outAccount5 -> account5.inAccount3;
    account3.outAccount6 -> account6.inAccount3;
    account3.outAccount7 -> account7.inAccount3;
    account3.outAccount8 -> account8.inAccount3;
    account3.outAccount9 -> account9.inAccount3;
    account3.outAccount10 -> account10.inAccount3;
    account3.outAccount11 -> account11.inAccount3;
    account3.outAccount12 -> account12.inAccount3;
    account3.outAccount13 -> account13.inAccount3;
    account3.outAccount14 -> account14.inAccount3;
    account3.outAccount15 -> account15.inAccount3;
    account3.outAccount16 -> account16.inAccount3;
    account3.outAccount17 -> account17.inAccount3;
    account3.outAccount18 -> account18.inAccount3;
    account3.outAccount19 -> account19.inAccount3;
    account3.outAccount20 -> account20.inAccount3;
    account3.outAccount21 -> account21.inAccount3;
    account3.outAccount22 -> account22.inAccount3;
    account3.outAccount23 -> account23.inAccount3;
    account3.outAccount24 -> account24.inAccount3;
    account3.outAccount25 -> account25.inAccount3;
    account3.outAccount26 -> account26.inAccount3;
    account3.outAccount27 -> account27.inAccount3;
    account3.outAccount28 -> account28.inAccount3;
    account3.outAccount29 -> account29.inAccount3;

    account4.outAccount0 -> account0.inAccount4;
    account4.outAccount1 -> account1.inAccount4;
    account4.outAccount2 -> account2.inAccount4;
    account4.outAccount3 -> account3.inAccount4;
    account4.outAccount4 -> account4.inAccount4;
    account4.outAccount5 -> account5.inAccount4;
    account4.outAccount6 -> account6.inAccount4;
    account4.outAccount7 -> account7.inAccount4;
    account4.outAccount8 -> account8.inAccount4;
    account4.outAccount9 -> account9.inAccount4;
    account4.outAccount10 -> account10.inAccount4;
    account4.outAccount11 -> account11.inAccount4;
    account4.outAccount12 -> account12.inAccount4;
    account4.outAccount13 -> account13.inAccount4;
    account4.outAccount14 -> account14.inAccount4;
    account4.outAccount15 -> account15.inAccount4;
    account4.outAccount16 -> account16.inAccount4;
    account4.outAccount17 -> account17.inAccount4;
    account4.outAccount18 -> account18.inAccount4;
    account4.outAccount19 -> account19.inAccount4;
    account4.outAccount20 -> account20.inAccount4;
    account4.outAccount21 -> account21.inAccount4;
    account4.outAccount22 -> account22.inAccount4;
    account4.outAccount23 -> account23.inAccount4;
    account4.outAccount24 -> account24.inAccount4;
    account4.outAccount25 -> account25.inAccount4;
    account4.outAccount26 -> account26.inAccount4;
    account4.outAccount27 -> account27.inAccount4;
    account4.outAccount28 -> account28.inAccount4;
    account4.outAccount29 -> account29.inAccount4;

    account5.outAccount0 -> account0.inAccount5;
    account5.outAccount1 -> account1.inAccount5;
    account5.outAccount2 -> account2.inAccount5;
    account5.outAccount3 -> account3.inAccount5;
    account5.outAccount4 -> account4.inAccount5;
    account5.outAccount5 -> account5.inAccount5;
    account5.outAccount6 -> account6.inAccount5;
    account5.outAccount7 -> account7.inAccount5;
    account5.outAccount8 -> account8.inAccount5;
    account5.outAccount9 -> account9.inAccount5;
    account5.outAccount10 -> account10.inAccount5;
    account5.outAccount11 -> account11.inAccount5;
    account5.outAccount12 -> account12.inAccount5;
    account5.outAccount13 -> account13.inAccount5;
    account5.outAccount14 -> account14.inAccount5;
    account5.outAccount15 -> account15.inAccount5;
    account5.outAccount16 -> account16.inAccount5;
    account5.outAccount17 -> account17.inAccount5;
    account5.outAccount18 -> account18.inAccount5;
    account5.outAccount19 -> account19.inAccount5;
    account5.outAccount20 -> account20.inAccount5;
    account5.outAccount21 -> account21.inAccount5;
    account5.outAccount22 -> account22.inAccount5;
    account5.outAccount23 -> account23.inAccount5;
    account5.outAccount24 -> account24.inAccount5;
    account5.outAccount25 -> account25.inAccount5;
    account5.outAccount26 -> account26.inAccount5;
    account5.outAccount27 -> account27.inAccount5;
    account5.outAccount28 -> account28.inAccount5;
    account5.outAccount29 -> account29.inAccount5;

    account6.outAccount0 -> account0.inAccount6;
    account6.outAccount1 -> account1.inAccount6;
    account6.outAccount2 -> account2.inAccount6;
    account6.outAccount3 -> account3.inAccount6;
    account6.outAccount4 -> account4.inAccount6;
    account6.outAccount5 -> account5.inAccount6;
    account6.outAccount6 -> account6.inAccount6;
    account6.outAccount7 -> account7.inAccount6;
    account6.outAccount8 -> account8.inAccount6;
    account6.outAccount9 -> account9.inAccount6;
    account6.outAccount10 -> account10.inAccount6;
    account6.outAccount11 -> account11.inAccount6;
    account6.outAccount12 -> account12.inAccount6;
    account6.outAccount13 -> account13.inAccount6;
    account6.outAccount14 -> account14.inAccount6;
    account6.outAccount15 -> account15.inAccount6;
    account6.outAccount16 -> account16.inAccount6;
    account6.outAccount17 -> account17.inAccount6;
    account6.outAccount18 -> account18.inAccount6;
    account6.outAccount19 -> account19.inAccount6;
    account6.outAccount20 -> account20.inAccount6;
    account6.outAccount21 -> account21.inAccount6;
    account6.outAccount22 -> account22.inAccount6;
    account6.outAccount23 -> account23.inAccount6;
    account6.outAccount24 -> account24.inAccount6;
    account6.outAccount25 -> account25.inAccount6;
    account6.outAccount26 -> account26.inAccount6;
    account6.outAccount27 -> account27.inAccount6;
    account6.outAccount28 -> account28.inAccount6;
    account6.outAccount29 -> account29.inAccount6;

    account7.outAccount0 -> account0.inAccount7;
    account7.outAccount1 -> account1.inAccount7;
    account7.outAccount2 -> account2.inAccount7;
    account7.outAccount3 -> account3.inAccount7;
    account7.outAccount4 -> account4.inAccount7;
    account7.outAccount5 -> account5.inAccount7;
    account7.outAccount6 -> account6.inAccount7;
    account7.outAccount7 -> account7.inAccount7;
    account7.outAccount8 -> account8.inAccount7;
    account7.outAccount9 -> account9.inAccount7;
    account7.outAccount10 -> account10.inAccount7;
    account7.outAccount11 -> account11.inAccount7;
    account7.outAccount12 -> account12.inAccount7;
    account7.outAccount13 -> account13.inAccount7;
    account7.outAccount14 -> account14.inAccount7;
    account7.outAccount15 -> account15.inAccount7;
    account7.outAccount16 -> account16.inAccount7;
    account7.outAccount17 -> account17.inAccount7;
    account7.outAccount18 -> account18.inAccount7;
    account7.outAccount19 -> account19.inAccount7;
    account7.outAccount20 -> account20.inAccount7;
    account7.outAccount21 -> account21.inAccount7;
    account7.outAccount22 -> account22.inAccount7;
    account7.outAccount23 -> account23.inAccount7;
    account7.outAccount24 -> account24.inAccount7;
    account7.outAccount25 -> account25.inAccount7;
    account7.outAccount26 -> account26.inAccount7;
    account7.outAccount27 -> account27.inAccount7;
    account7.outAccount28 -> account28.inAccount7;
    account7.outAccount29 -> account29.inAccount7;

    account8.outAccount0 -> account0.inAccount8;
    account8.outAccount1 -> account1.inAccount8;
    account8.outAccount2 -> account2.inAccount8;
    account8.outAccount3 -> account3.inAccount8;
    account8.outAccount4 -> account4.inAccount8;
    account8.outAccount5 -> account5.inAccount8;
    account8.outAccount6 -> account6.inAccount8;
    account8.outAccount7 -> account7.inAccount8;
    account8.outAccount8 -> account8.inAccount8;
    account8.outAccount9 -> account9.inAccount8;
    account8.outAccount10 -> account10.inAccount8;
    account8.outAccount11 -> account11.inAccount8;
    account8.outAccount12 -> account12.inAccount8;
    account8.outAccount13 -> account13.inAccount8;
    account8.outAccount14 -> account14.inAccount8;
    account8.outAccount15 -> account15.inAccount8;
    account8.outAccount16 -> account16.inAccount8;
    account8.outAccount17 -> account17.inAccount8;
    account8.outAccount18 -> account18.inAccount8;
    account8.outAccount19 -> account19.inAccount8;
    account8.outAccount20 -> account20.inAccount8;
    account8.outAccount21 -> account21.inAccount8;
    account8.outAccount22 -> account22.inAccount8;
    account8.outAccount23 -> account23.inAccount8;
    account8.outAccount24 -> account24.inAccount8;
    account8.outAccount25 -> account25.inAccount8;
    account8.outAccount26 -> account26.inAccount8;
    account8.outAccount27 -> account27.inAccount8;
    account8.outAccount28 -> account28.inAccount8;
    account8.outAccount29 -> account29.inAccount8;

    account9.outAccount0 -> account0.inAccount9;
    account9.outAccount1 -> account1.inAccount9;
    account9.outAccount2 -> account2.inAccount9;
    account9.outAccount3 -> account3.inAccount9;
    account9.outAccount4 -> account4.inAccount9;
    account9.outAccount5 -> account5.inAccount9;
    account9.outAccount6 -> account6.inAccount9;
    account9.outAccount7 -> account7.inAccount9;
    account9.outAccount8 -> account8.inAccount9;
    account9.outAccount9 -> account9.inAccount9;
    account9.outAccount10 -> account10.inAccount9;
    account9.outAccount11 -> account11.inAccount9;
    account9.outAccount12 -> account12.inAccount9;
    account9.outAccount13 -> account13.inAccount9;
    account9.outAccount14 -> account14.inAccount9;
    account9.outAccount15 -> account15.inAccount9;
    account9.outAccount16 -> account16.inAccount9;
    account9.outAccount17 -> account17.inAccount9;
    account9.outAccount18 -> account18.inAccount9;
    account9.outAccount19 -> account19.inAccount9;
    account9.outAccount20 -> account20.inAccount9;
    account9.outAccount21 -> account21.inAccount9;
    account9.outAccount22 -> account22.inAccount9;
    account9.outAccount23 -> account23.inAccount9;
    account9.outAccount24 -> account24.inAccount9;
    account9.outAccount25 -> account25.inAccount9;
    account9.outAccount26 -> account26.inAccount9;
    account9.outAccount27 -> account27.inAccount9;
    account9.outAccount28 -> account28.inAccount9;
    account9.outAccount29 -> account29.inAccount9;

    account10.outAccount0 -> account0.inAccount10;
    account10.outAccount1 -> account1.inAccount10;
    account10.outAccount2 -> account2.inAccount10;
    account10.outAccount3 -> account3.inAccount10;
    account10.outAccount4 -> account4.inAccount10;
    account10.outAccount5 -> account5.inAccount10;
    account10.outAccount6 -> account6.inAccount10;
    account10.outAccount7 -> account7.inAccount10;
    account10.outAccount8 -> account8.inAccount10;
    account10.outAccount9 -> account9.inAccount10;
    account10.outAccount10 -> account10.inAccount10;
    account10.outAccount11 -> account11.inAccount10;
    account10.outAccount12 -> account12.inAccount10;
    account10.outAccount13 -> account13.inAccount10;
    account10.outAccount14 -> account14.inAccount10;
    account10.outAccount15 -> account15.inAccount10;
    account10.outAccount16 -> account16.inAccount10;
    account10.outAccount17 -> account17.inAccount10;
    account10.outAccount18 -> account18.inAccount10;
    account10.outAccount19 -> account19.inAccount10;
    account10.outAccount20 -> account20.inAccount10;
    account10.outAccount21 -> account21.inAccount10;
    account10.outAccount22 -> account22.inAccount10;
    account10.outAccount23 -> account23.inAccount10;
    account10.outAccount24 -> account24.inAccount10;
    account10.outAccount25 -> account25.inAccount10;
    account10.outAccount26 -> account26.inAccount10;
    account10.outAccount27 -> account27.inAccount10;
    account10.outAccount28 -> account28.inAccount10;
    account10.outAccount29 -> account29.inAccount10;

    account11.outAccount0 -> account0.inAccount11;
    account11.outAccount1 -> account1.inAccount11;
    account11.outAccount2 -> account2.inAccount11;
    account11.outAccount3 -> account3.inAccount11;
    account11.outAccount4 -> account4.inAccount11;
    account11.outAccount5 -> account5.inAccount11;
    account11.outAccount6 -> account6.inAccount11;
    account11.outAccount7 -> account7.inAccount11;
    account11.outAccount8 -> account8.inAccount11;
    account11.outAccount9 -> account9.inAccount11;
    account11.outAccount10 -> account10.inAccount11;
    account11.outAccount11 -> account11.inAccount11;
    account11.outAccount12 -> account12.inAccount11;
    account11.outAccount13 -> account13.inAccount11;
    account11.outAccount14 -> account14.inAccount11;
    account11.outAccount15 -> account15.inAccount11;
    account11.outAccount16 -> account16.inAccount11;
    account11.outAccount17 -> account17.inAccount11;
    account11.outAccount18 -> account18.inAccount11;
    account11.outAccount19 -> account19.inAccount11;
    account11.outAccount20 -> account20.inAccount11;
    account11.outAccount21 -> account21.inAccount11;
    account11.outAccount22 -> account22.inAccount11;
    account11.outAccount23 -> account23.inAccount11;
    account11.outAccount24 -> account24.inAccount11;
    account11.outAccount25 -> account25.inAccount11;
    account11.outAccount26 -> account26.inAccount11;
    account11.outAccount27 -> account27.inAccount11;
    account11.outAccount28 -> account28.inAccount11;
    account11.outAccount29 -> account29.inAccount11;

    account12.outAccount0 -> account0.inAccount12;
    account12.outAccount1 -> account1.inAccount12;
    account12.outAccount2 -> account2.inAccount12;
    account12.outAccount3 -> account3.inAccount12;
    account12.outAccount4 -> account4.inAccount12;
    account12.outAccount5 -> account5.inAccount12;
    account12.outAccount6 -> account6.inAccount12;
    account12.outAccount7 -> account7.inAccount12;
    account12.outAccount8 -> account8.inAccount12;
    account12.outAccount9 -> account9.inAccount12;
    account12.outAccount10 -> account10.inAccount12;
    account12.outAccount11 -> account11.inAccount12;
    account12.outAccount12 -> account12.inAccount12;
    account12.outAccount13 -> account13.inAccount12;
    account12.outAccount14 -> account14.inAccount12;
    account12.outAccount15 -> account15.inAccount12;
    account12.outAccount16 -> account16.inAccount12;
    account12.outAccount17 -> account17.inAccount12;
    account12.outAccount18 -> account18.inAccount12;
    account12.outAccount19 -> account19.inAccount12;
    account12.outAccount20 -> account20.inAccount12;
    account12.outAccount21 -> account21.inAccount12;
    account12.outAccount22 -> account22.inAccount12;
    account12.outAccount23 -> account23.inAccount12;
    account12.outAccount24 -> account24.inAccount12;
    account12.outAccount25 -> account25.inAccount12;
    account12.outAccount26 -> account26.inAccount12;
    account12.outAccount27 -> account27.inAccount12;
    account12.outAccount28 -> account28.inAccount12;
    account12.outAccount29 -> account29.inAccount12;

    account13.outAccount0 -> account0.inAccount13;
    account13.outAccount1 -> account1.inAccount13;
    account13.outAccount2 -> account2.inAccount13;
    account13.outAccount3 -> account3.inAccount13;
    account13.outAccount4 -> account4.inAccount13;
    account13.outAccount5 -> account5.inAccount13;
    account13.outAccount6 -> account6.inAccount13;
    account13.outAccount7 -> account7.inAccount13;
    account13.outAccount8 -> account8.inAccount13;
    account13.outAccount9 -> account9.inAccount13;
    account13.outAccount10 -> account10.inAccount13;
    account13.outAccount11 -> account11.inAccount13;
    account13.outAccount12 -> account12.inAccount13;
    account13.outAccount13 -> account13.inAccount13;
    account13.outAccount14 -> account14.inAccount13;
    account13.outAccount15 -> account15.inAccount13;
    account13.outAccount16 -> account16.inAccount13;
    account13.outAccount17 -> account17.inAccount13;
    account13.outAccount18 -> account18.inAccount13;
    account13.outAccount19 -> account19.inAccount13;
    account13.outAccount20 -> account20.inAccount13;
    account13.outAccount21 -> account21.inAccount13;
    account13.outAccount22 -> account22.inAccount13;
    account13.outAccount23 -> account23.inAccount13;
    account13.outAccount24 -> account24.inAccount13;
    account13.outAccount25 -> account25.inAccount13;
    account13.outAccount26 -> account26.inAccount13;
    account13.outAccount27 -> account27.inAccount13;
    account13.outAccount28 -> account28.inAccount13;
    account13.outAccount29 -> account29.inAccount13;

    account14.outAccount0 -> account0.inAccount14;
    account14.outAccount1 -> account1.inAccount14;
    account14.outAccount2 -> account2.inAccount14;
    account14.outAccount3 -> account3.inAccount14;
    account14.outAccount4 -> account4.inAccount14;
    account14.outAccount5 -> account5.inAccount14;
    account14.outAccount6 -> account6.inAccount14;
    account14.outAccount7 -> account7.inAccount14;
    account14.outAccount8 -> account8.inAccount14;
    account14.outAccount9 -> account9.inAccount14;
    account14.outAccount10 -> account10.inAccount14;
    account14.outAccount11 -> account11.inAccount14;
    account14.outAccount12 -> account12.inAccount14;
    account14.outAccount13 -> account13.inAccount14;
    account14.outAccount14 -> account14.inAccount14;
    account14.outAccount15 -> account15.inAccount14;
    account14.outAccount16 -> account16.inAccount14;
    account14.outAccount17 -> account17.inAccount14;
    account14.outAccount18 -> account18.inAccount14;
    account14.outAccount19 -> account19.inAccount14;
    account14.outAccount20 -> account20.inAccount14;
    account14.outAccount21 -> account21.inAccount14;
    account14.outAccount22 -> account22.inAccount14;
    account14.outAccount23 -> account23.inAccount14;
    account14.outAccount24 -> account24.inAccount14;
    account14.outAccount25 -> account25.inAccount14;
    account14.outAccount26 -> account26.inAccount14;
    account14.outAccount27 -> account27.inAccount14;
    account14.outAccount28 -> account28.inAccount14;
    account14.outAccount29 -> account29.inAccount14;

    account15.outAccount0 -> account0.inAccount15;
    account15.outAccount1 -> account1.inAccount15;
    account15.outAccount2 -> account2.inAccount15;
    account15.outAccount3 -> account3.inAccount15;
    account15.outAccount4 -> account4.inAccount15;
    account15.outAccount5 -> account5.inAccount15;
    account15.outAccount6 -> account6.inAccount15;
    account15.outAccount7 -> account7.inAccount15;
    account15.outAccount8 -> account8.inAccount15;
    account15.outAccount9 -> account9.inAccount15;
    account15.outAccount10 -> account10.inAccount15;
    account15.outAccount11 -> account11.inAccount15;
    account15.outAccount12 -> account12.inAccount15;
    account15.outAccount13 -> account13.inAccount15;
    account15.outAccount14 -> account14.inAccount15;
    account15.outAccount15 -> account15.inAccount15;
    account15.outAccount16 -> account16.inAccount15;
    account15.outAccount17 -> account17.inAccount15;
    account15.outAccount18 -> account18.inAccount15;
    account15.outAccount19 -> account19.inAccount15;
    account15.outAccount20 -> account20.inAccount15;
    account15.outAccount21 -> account21.inAccount15;
    account15.outAccount22 -> account22.inAccount15;
    account15.outAccount23 -> account23.inAccount15;
    account15.outAccount24 -> account24.inAccount15;
    account15.outAccount25 -> account25.inAccount15;
    account15.outAccount26 -> account26.inAccount15;
    account15.outAccount27 -> account27.inAccount15;
    account15.outAccount28 -> account28.inAccount15;
    account15.outAccount29 -> account29.inAccount15;

    account16.outAccount0 -> account0.inAccount16;
    account16.outAccount1 -> account1.inAccount16;
    account16.outAccount2 -> account2.inAccount16;
    account16.outAccount3 -> account3.inAccount16;
    account16.outAccount4 -> account4.inAccount16;
    account16.outAccount5 -> account5.inAccount16;
    account16.outAccount6 -> account6.inAccount16;
    account16.outAccount7 -> account7.inAccount16;
    account16.outAccount8 -> account8.inAccount16;
    account16.outAccount9 -> account9.inAccount16;
    account16.outAccount10 -> account10.inAccount16;
    account16.outAccount11 -> account11.inAccount16;
    account16.outAccount12 -> account12.inAccount16;
    account16.outAccount13 -> account13.inAccount16;
    account16.outAccount14 -> account14.inAccount16;
    account16.outAccount15 -> account15.inAccount16;
    account16.outAccount16 -> account16.inAccount16;
    account16.outAccount17 -> account17.inAccount16;
    account16.outAccount18 -> account18.inAccount16;
    account16.outAccount19 -> account19.inAccount16;
    account16.outAccount20 -> account20.inAccount16;
    account16.outAccount21 -> account21.inAccount16;
    account16.outAccount22 -> account22.inAccount16;
    account16.outAccount23 -> account23.inAccount16;
    account16.outAccount24 -> account24.inAccount16;
    account16.outAccount25 -> account25.inAccount16;
    account16.outAccount26 -> account26.inAccount16;
    account16.outAccount27 -> account27.inAccount16;
    account16.outAccount28 -> account28.inAccount16;
    account16.outAccount29 -> account29.inAccount16;

    account17.outAccount0 -> account0.inAccount17;
    account17.outAccount1 -> account1.inAccount17;
    account17.outAccount2 -> account2.inAccount17;
    account17.outAccount3 -> account3.inAccount17;
    account17.outAccount4 -> account4.inAccount17;
    account17.outAccount5 -> account5.inAccount17;
    account17.outAccount6 -> account6.inAccount17;
    account17.outAccount7 -> account7.inAccount17;
    account17.outAccount8 -> account8.inAccount17;
    account17.outAccount9 -> account9.inAccount17;
    account17.outAccount10 -> account10.inAccount17;
    account17.outAccount11 -> account11.inAccount17;
    account17.outAccount12 -> account12.inAccount17;
    account17.outAccount13 -> account13.inAccount17;
    account17.outAccount14 -> account14.inAccount17;
    account17.outAccount15 -> account15.inAccount17;
    account17.outAccount16 -> account16.inAccount17;
    account17.outAccount17 -> account17.inAccount17;
    account17.outAccount18 -> account18.inAccount17;
    account17.outAccount19 -> account19.inAccount17;
    account17.outAccount20 -> account20.inAccount17;
    account17.outAccount21 -> account21.inAccount17;
    account17.outAccount22 -> account22.inAccount17;
    account17.outAccount23 -> account23.inAccount17;
    account17.outAccount24 -> account24.inAccount17;
    account17.outAccount25 -> account25.inAccount17;
    account17.outAccount26 -> account26.inAccount17;
    account17.outAccount27 -> account27.inAccount17;
    account17.outAccount28 -> account28.inAccount17;
    account17.outAccount29 -> account29.inAccount17;

    account18.outAccount0 -> account0.inAccount18;
    account18.outAccount1 -> account1.inAccount18;
    account18.outAccount2 -> account2.inAccount18;
    account18.outAccount3 -> account3.inAccount18;
    account18.outAccount4 -> account4.inAccount18;
    account18.outAccount5 -> account5.inAccount18;
    account18.outAccount6 -> account6.inAccount18;
    account18.outAccount7 -> account7.inAccount18;
    account18.outAccount8 -> account8.inAccount18;
    account18.outAccount9 -> account9.inAccount18;
    account18.outAccount10 -> account10.inAccount18;
    account18.outAccount11 -> account11.inAccount18;
    account18.outAccount12 -> account12.inAccount18;
    account18.outAccount13 -> account13.inAccount18;
    account18.outAccount14 -> account14.inAccount18;
    account18.outAccount15 -> account15.inAccount18;
    account18.outAccount16 -> account16.inAccount18;
    account18.outAccount17 -> account17.inAccount18;
    account18.outAccount18 -> account18.inAccount18;
    account18.outAccount19 -> account19.inAccount18;
    account18.outAccount20 -> account20.inAccount18;
    account18.outAccount21 -> account21.inAccount18;
    account18.outAccount22 -> account22.inAccount18;
    account18.outAccount23 -> account23.inAccount18;
    account18.outAccount24 -> account24.inAccount18;
    account18.outAccount25 -> account25.inAccount18;
    account18.outAccount26 -> account26.inAccount18;
    account18.outAccount27 -> account27.inAccount18;
    account18.outAccount28 -> account28.inAccount18;
    account18.outAccount29 -> account29.inAccount18;

    account19.outAccount0 -> account0.inAccount19;
    account19.outAccount1 -> account1.inAccount19;
    account19.outAccount2 -> account2.inAccount19;
    account19.outAccount3 -> account3.inAccount19;
    account19.outAccount4 -> account4.inAccount19;
    account19.outAccount5 -> account5.inAccount19;
    account19.outAccount6 -> account6.inAccount19;
    account19.outAccount7 -> account7.inAccount19;
    account19.outAccount8 -> account8.inAccount19;
    account19.outAccount9 -> account9.inAccount19;
    account19.outAccount10 -> account10.inAccount19;
    account19.outAccount11 -> account11.inAccount19;
    account19.outAccount12 -> account12.inAccount19;
    account19.outAccount13 -> account13.inAccount19;
    account19.outAccount14 -> account14.inAccount19;
    account19.outAccount15 -> account15.inAccount19;
    account19.outAccount16 -> account16.inAccount19;
    account19.outAccount17 -> account17.inAccount19;
    account19.outAccount18 -> account18.inAccount19;
    account19.outAccount19 -> account19.inAccount19;
    account19.outAccount20 -> account20.inAccount19;
    account19.outAccount21 -> account21.inAccount19;
    account19.outAccount22 -> account22.inAccount19;
    account19.outAccount23 -> account23.inAccount19;
    account19.outAccount24 -> account24.inAccount19;
    account19.outAccount25 -> account25.inAccount19;
    account19.outAccount26 -> account26.inAccount19;
    account19.outAccount27 -> account27.inAccount19;
    account19.outAccount28 -> account28.inAccount19;
    account19.outAccount29 -> account29.inAccount19;

    account20.outAccount0 -> account0.inAccount20;
    account20.outAccount1 -> account1.inAccount20;
    account20.outAccount2 -> account2.inAccount20;
    account20.outAccount3 -> account3.inAccount20;
    account20.outAccount4 -> account4.inAccount20;
    account20.outAccount5 -> account5.inAccount20;
    account20.outAccount6 -> account6.inAccount20;
    account20.outAccount7 -> account7.inAccount20;
    account20.outAccount8 -> account8.inAccount20;
    account20.outAccount9 -> account9.inAccount20;
    account20.outAccount10 -> account10.inAccount20;
    account20.outAccount11 -> account11.inAccount20;
    account20.outAccount12 -> account12.inAccount20;
    account20.outAccount13 -> account13.inAccount20;
    account20.outAccount14 -> account14.inAccount20;
    account20.outAccount15 -> account15.inAccount20;
    account20.outAccount16 -> account16.inAccount20;
    account20.outAccount17 -> account17.inAccount20;
    account20.outAccount18 -> account18.inAccount20;
    account20.outAccount19 -> account19.inAccount20;
    account20.outAccount20 -> account20.inAccount20;
    account20.outAccount21 -> account21.inAccount20;
    account20.outAccount22 -> account22.inAccount20;
    account20.outAccount23 -> account23.inAccount20;
    account20.outAccount24 -> account24.inAccount20;
    account20.outAccount25 -> account25.inAccount20;
    account20.outAccount26 -> account26.inAccount20;
    account20.outAccount27 -> account27.inAccount20;
    account20.outAccount28 -> account28.inAccount20;
    account20.outAccount29 -> account29.inAccount20;

    account21.outAccount0 -> account0.inAccount21;
    account21.outAccount1 -> account1.inAccount21;
    account21.outAccount2 -> account2.inAccount21;
    account21.outAccount3 -> account3.inAccount21;
    account21.outAccount4 -> account4.inAccount21;
    account21.outAccount5 -> account5.inAccount21;
    account21.outAccount6 -> account6.inAccount21;
    account21.outAccount7 -> account7.inAccount21;
    account21.outAccount8 -> account8.inAccount21;
    account21.outAccount9 -> account9.inAccount21;
    account21.outAccount10 -> account10.inAccount21;
    account21.outAccount11 -> account11.inAccount21;
    account21.outAccount12 -> account12.inAccount21;
    account21.outAccount13 -> account13.inAccount21;
    account21.outAccount14 -> account14.inAccount21;
    account21.outAccount15 -> account15.inAccount21;
    account21.outAccount16 -> account16.inAccount21;
    account21.outAccount17 -> account17.inAccount21;
    account21.outAccount18 -> account18.inAccount21;
    account21.outAccount19 -> account19.inAccount21;
    account21.outAccount20 -> account20.inAccount21;
    account21.outAccount21 -> account21.inAccount21;
    account21.outAccount22 -> account22.inAccount21;
    account21.outAccount23 -> account23.inAccount21;
    account21.outAccount24 -> account24.inAccount21;
    account21.outAccount25 -> account25.inAccount21;
    account21.outAccount26 -> account26.inAccount21;
    account21.outAccount27 -> account27.inAccount21;
    account21.outAccount28 -> account28.inAccount21;
    account21.outAccount29 -> account29.inAccount21;

    account22.outAccount0 -> account0.inAccount22;
    account22.outAccount1 -> account1.inAccount22;
    account22.outAccount2 -> account2.inAccount22;
    account22.outAccount3 -> account3.inAccount22;
    account22.outAccount4 -> account4.inAccount22;
    account22.outAccount5 -> account5.inAccount22;
    account22.outAccount6 -> account6.inAccount22;
    account22.outAccount7 -> account7.inAccount22;
    account22.outAccount8 -> account8.inAccount22;
    account22.outAccount9 -> account9.inAccount22;
    account22.outAccount10 -> account10.inAccount22;
    account22.outAccount11 -> account11.inAccount22;
    account22.outAccount12 -> account12.inAccount22;
    account22.outAccount13 -> account13.inAccount22;
    account22.outAccount14 -> account14.inAccount22;
    account22.outAccount15 -> account15.inAccount22;
    account22.outAccount16 -> account16.inAccount22;
    account22.outAccount17 -> account17.inAccount22;
    account22.outAccount18 -> account18.inAccount22;
    account22.outAccount19 -> account19.inAccount22;
    account22.outAccount20 -> account20.inAccount22;
    account22.outAccount21 -> account21.inAccount22;
    account22.outAccount22 -> account22.inAccount22;
    account22.outAccount23 -> account23.inAccount22;
    account22.outAccount24 -> account24.inAccount22;
    account22.outAccount25 -> account25.inAccount22;
    account22.outAccount26 -> account26.inAccount22;
    account22.outAccount27 -> account27.inAccount22;
    account22.outAccount28 -> account28.inAccount22;
    account22.outAccount29 -> account29.inAccount22;

    account23.outAccount0 -> account0.inAccount23;
    account23.outAccount1 -> account1.inAccount23;
    account23.outAccount2 -> account2.inAccount23;
    account23.outAccount3 -> account3.inAccount23;
    account23.outAccount4 -> account4.inAccount23;
    account23.outAccount5 -> account5.inAccount23;
    account23.outAccount6 -> account6.inAccount23;
    account23.outAccount7 -> account7.inAccount23;
    account23.outAccount8 -> account8.inAccount23;
    account23.outAccount9 -> account9.inAccount23;
    account23.outAccount10 -> account10.inAccount23;
    account23.outAccount11 -> account11.inAccount23;
    account23.outAccount12 -> account12.inAccount23;
    account23.outAccount13 -> account13.inAccount23;
    account23.outAccount14 -> account14.inAccount23;
    account23.outAccount15 -> account15.inAccount23;
    account23.outAccount16 -> account16.inAccount23;
    account23.outAccount17 -> account17.inAccount23;
    account23.outAccount18 -> account18.inAccount23;
    account23.outAccount19 -> account19.inAccount23;
    account23.outAccount20 -> account20.inAccount23;
    account23.outAccount21 -> account21.inAccount23;
    account23.outAccount22 -> account22.inAccount23;
    account23.outAccount23 -> account23.inAccount23;
    account23.outAccount24 -> account24.inAccount23;
    account23.outAccount25 -> account25.inAccount23;
    account23.outAccount26 -> account26.inAccount23;
    account23.outAccount27 -> account27.inAccount23;
    account23.outAccount28 -> account28.inAccount23;
    account23.outAccount29 -> account29.inAccount23;

    account24.outAccount0 -> account0.inAccount24;
    account24.outAccount1 -> account1.inAccount24;
    account24.outAccount2 -> account2.inAccount24;
    account24.outAccount3 -> account3.inAccount24;
    account24.outAccount4 -> account4.inAccount24;
    account24.outAccount5 -> account5.inAccount24;
    account24.outAccount6 -> account6.inAccount24;
    account24.outAccount7 -> account7.inAccount24;
    account24.outAccount8 -> account8.inAccount24;
    account24.outAccount9 -> account9.inAccount24;
    account24.outAccount10 -> account10.inAccount24;
    account24.outAccount11 -> account11.inAccount24;
    account24.outAccount12 -> account12.inAccount24;
    account24.outAccount13 -> account13.inAccount24;
    account24.outAccount14 -> account14.inAccount24;
    account24.outAccount15 -> account15.inAccount24;
    account24.outAccount16 -> account16.inAccount24;
    account24.outAccount17 -> account17.inAccount24;
    account24.outAccount18 -> account18.inAccount24;
    account24.outAccount19 -> account19.inAccount24;
    account24.outAccount20 -> account20.inAccount24;
    account24.outAccount21 -> account21.inAccount24;
    account24.outAccount22 -> account22.inAccount24;
    account24.outAccount23 -> account23.inAccount24;
    account24.outAccount24 -> account24.inAccount24;
    account24.outAccount25 -> account25.inAccount24;
    account24.outAccount26 -> account26.inAccount24;
    account24.outAccount27 -> account27.inAccount24;
    account24.outAccount28 -> account28.inAccount24;
    account24.outAccount29 -> account29.inAccount24;

    account25.outAccount0 -> account0.inAccount25;
    account25.outAccount1 -> account1.inAccount25;
    account25.outAccount2 -> account2.inAccount25;
    account25.outAccount3 -> account3.inAccount25;
    account25.outAccount4 -> account4.inAccount25;
    account25.outAccount5 -> account5.inAccount25;
    account25.outAccount6 -> account6.inAccount25;
    account25.outAccount7 -> account7.inAccount25;
    account25.outAccount8 -> account8.inAccount25;
    account25.outAccount9 -> account9.inAccount25;
    account25.outAccount10 -> account10.inAccount25;
    account25.outAccount11 -> account11.inAccount25;
    account25.outAccount12 -> account12.inAccount25;
    account25.outAccount13 -> account13.inAccount25;
    account25.outAccount14 -> account14.inAccount25;
    account25.outAccount15 -> account15.inAccount25;
    account25.outAccount16 -> account16.inAccount25;
    account25.outAccount17 -> account17.inAccount25;
    account25.outAccount18 -> account18.inAccount25;
    account25.outAccount19 -> account19.inAccount25;
    account25.outAccount20 -> account20.inAccount25;
    account25.outAccount21 -> account21.inAccount25;
    account25.outAccount22 -> account22.inAccount25;
    account25.outAccount23 -> account23.inAccount25;
    account25.outAccount24 -> account24.inAccount25;
    account25.outAccount25 -> account25.inAccount25;
    account25.outAccount26 -> account26.inAccount25;
    account25.outAccount27 -> account27.inAccount25;
    account25.outAccount28 -> account28.inAccount25;
    account25.outAccount29 -> account29.inAccount25;

    account26.outAccount0 -> account0.inAccount26;
    account26.outAccount1 -> account1.inAccount26;
    account26.outAccount2 -> account2.inAccount26;
    account26.outAccount3 -> account3.inAccount26;
    account26.outAccount4 -> account4.inAccount26;
    account26.outAccount5 -> account5.inAccount26;
    account26.outAccount6 -> account6.inAccount26;
    account26.outAccount7 -> account7.inAccount26;
    account26.outAccount8 -> account8.inAccount26;
    account26.outAccount9 -> account9.inAccount26;
    account26.outAccount10 -> account10.inAccount26;
    account26.outAccount11 -> account11.inAccount26;
    account26.outAccount12 -> account12.inAccount26;
    account26.outAccount13 -> account13.inAccount26;
    account26.outAccount14 -> account14.inAccount26;
    account26.outAccount15 -> account15.inAccount26;
    account26.outAccount16 -> account16.inAccount26;
    account26.outAccount17 -> account17.inAccount26;
    account26.outAccount18 -> account18.inAccount26;
    account26.outAccount19 -> account19.inAccount26;
    account26.outAccount20 -> account20.inAccount26;
    account26.outAccount21 -> account21.inAccount26;
    account26.outAccount22 -> account22.inAccount26;
    account26.outAccount23 -> account23.inAccount26;
    account26.outAccount24 -> account24.inAccount26;
    account26.outAccount25 -> account25.inAccount26;
    account26.outAccount26 -> account26.inAccount26;
    account26.outAccount27 -> account27.inAccount26;
    account26.outAccount28 -> account28.inAccount26;
    account26.outAccount29 -> account29.inAccount26;

    account27.outAccount0 -> account0.inAccount27;
    account27.outAccount1 -> account1.inAccount27;
    account27.outAccount2 -> account2.inAccount27;
    account27.outAccount3 -> account3.inAccount27;
    account27.outAccount4 -> account4.inAccount27;
    account27.outAccount5 -> account5.inAccount27;
    account27.outAccount6 -> account6.inAccount27;
    account27.outAccount7 -> account7.inAccount27;
    account27.outAccount8 -> account8.inAccount27;
    account27.outAccount9 -> account9.inAccount27;
    account27.outAccount10 -> account10.inAccount27;
    account27.outAccount11 -> account11.inAccount27;
    account27.outAccount12 -> account12.inAccount27;
    account27.outAccount13 -> account13.inAccount27;
    account27.outAccount14 -> account14.inAccount27;
    account27.outAccount15 -> account15.inAccount27;
    account27.outAccount16 -> account16.inAccount27;
    account27.outAccount17 -> account17.inAccount27;
    account27.outAccount18 -> account18.inAccount27;
    account27.outAccount19 -> account19.inAccount27;
    account27.outAccount20 -> account20.inAccount27;
    account27.outAccount21 -> account21.inAccount27;
    account27.outAccount22 -> account22.inAccount27;
    account27.outAccount23 -> account23.inAccount27;
    account27.outAccount24 -> account24.inAccount27;
    account27.outAccount25 -> account25.inAccount27;
    account27.outAccount26 -> account26.inAccount27;
    account27.outAccount27 -> account27.inAccount27;
    account27.outAccount28 -> account28.inAccount27;
    account27.outAccount29 -> account29.inAccount27;

    account28.outAccount0 -> account0.inAccount28;
    account28.outAccount1 -> account1.inAccount28;
    account28.outAccount2 -> account2.inAccount28;
    account28.outAccount3 -> account3.inAccount28;
    account28.outAccount4 -> account4.inAccount28;
    account28.outAccount5 -> account5.inAccount28;
    account28.outAccount6 -> account6.inAccount28;
    account28.outAccount7 -> account7.inAccount28;
    account28.outAccount8 -> account8.inAccount28;
    account28.outAccount9 -> account9.inAccount28;
    account28.outAccount10 -> account10.inAccount28;
    account28.outAccount11 -> account11.inAccount28;
    account28.outAccount12 -> account12.inAccount28;
    account28.outAccount13 -> account13.inAccount28;
    account28.outAccount14 -> account14.inAccount28;
    account28.outAccount15 -> account15.inAccount28;
    account28.outAccount16 -> account16.inAccount28;
    account28.outAccount17 -> account17.inAccount28;
    account28.outAccount18 -> account18.inAccount28;
    account28.outAccount19 -> account19.inAccount28;
    account28.outAccount20 -> account20.inAccount28;
    account28.outAccount21 -> account21.inAccount28;
    account28.outAccount22 -> account22.inAccount28;
    account28.outAccount23 -> account23.inAccount28;
    account28.outAccount24 -> account24.inAccount28;
    account28.outAccount25 -> account25.inAccount28;
    account28.outAccount26 -> account26.inAccount28;
    account28.outAccount27 -> account27.inAccount28;
    account28.outAccount28 -> account28.inAccount28;
    account28.outAccount29 -> account29.inAccount28;

    account29.outAccount0 -> account0.inAccount29;
    account29.outAccount1 -> account1.inAccount29;
    account29.outAccount2 -> account2.inAccount29;
    account29.outAccount3 -> account3.inAccount29;
    account29.outAccount4 -> account4.inAccount29;
    account29.outAccount5 -> account5.inAccount29;
    account29.outAccount6 -> account6.inAccount29;
    account29.outAccount7 -> account7.inAccount29;
    account29.outAccount8 -> account8.inAccount29;
    account29.outAccount9 -> account9.inAccount29;
    account29.outAccount10 -> account10.inAccount29;
    account29.outAccount11 -> account11.inAccount29;
    account29.outAccount12 -> account12.inAccount29;
    account29.outAccount13 -> account13.inAccount29;
    account29.outAccount14 -> account14.inAccount29;
    account29.outAccount15 -> account15.inAccount29;
    account29.outAccount16 -> account16.inAccount29;
    account29.outAccount17 -> account17.inAccount29;
    account29.outAccount18 -> account18.inAccount29;
    account29.outAccount19 -> account19.inAccount29;
    account29.outAccount20 -> account20.inAccount29;
    account29.outAccount21 -> account21.inAccount29;
    account29.outAccount22 -> account22.inAccount29;
    account29.outAccount23 -> account23.inAccount29;
    account29.outAccount24 -> account24.inAccount29;
    account29.outAccount25 -> account25.inAccount29;
    account29.outAccount26 -> account26.inAccount29;
    account29.outAccount27 -> account27.inAccount29;
    account29.outAccount28 -> account28.inAccount29;
    account29.outAccount29 -> account29.inAccount29;

    // [[[end]]]
}