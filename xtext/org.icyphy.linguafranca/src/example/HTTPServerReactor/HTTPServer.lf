target TypeScript {
    keepalive : true
    //logging : "debug"
    //timeout : 10 sec
};
main reactor Server {
    preamble {=
        import * as https from "https"
        import * as http from "http"
    =}
    state server:{=http.Server | undefined=}(undefined);
    physical action serverRequest:{= [ http.IncomingMessage, http.ServerResponse ] =};
    reaction (startup) -> serverRequest {=
        let options = {};
        server = http.createServer(options, (req : http.IncomingMessage, res : http.ServerResponse) => {
            actions.serverRequest.schedule(0, [req, res])
        }).listen(8000);
    =}
    reaction (serverRequest) {=
        let requestArray = serverRequest;
        if (requestArray) {
            let req = requestArray[0];
            let res = requestArray[1];
            res.writeHead(200);
            res.end('hello world\n');
        }
    =}
    reaction (shutdown) {=
        if (server) {
            server.close();
        }
    =} 
}