target TypeScript;
reactor Destination {
    input x:number;
    input y:number;
    reaction(x, y) {=
        let elapsed = util.getElapsedLogicalTime();
        console.log("Time since start: " + elapsed);
        if (! elapsed.isEqualTo(new UnitBasedTimeValue( 0, TimeUnit.sec ))) {
            console.log("Expected elapsed time to be 0, but it was " + elapsed);
            util.failure();
        }
        let count = 0;
        if (x) {
            console.log("x is present.");
            count++;
        }
        if (y) {
            console.log("y is present.");
            count++;
        }
        if (count != 1) {
            console.log("Expected exactly one input to be present but got " + count);
            util.failure();
        }
    =}
}
main reactor Microsteps {
    timer start;
    logical action repeat;
    d = new Destination();
    reaction(start) -> d.x, repeat {=
        d.x = 1;
        actions.repeat.schedule(0, null);
    =}
    reaction(repeat) -> d.y {=
        d.y = 1;
    =}
}