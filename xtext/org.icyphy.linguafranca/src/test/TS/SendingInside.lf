// This tests a reactor that contains another reactor and also
// has its own reaction that routes inputs to the contained reactor.

// FIXME: Find a way to terminate with failure and address target attributes

target TypeScript(
    timeout = 2 sec
);
//(
//  run = "bin/SendingInside -fast -timeout 10 sec"
//);
reactor Printer {
    input x:number;
    state count:number(1);
    reaction(x) x {=
        console.log("Inside reactor received: "
          + x.get());
        if ((x.get() as number) != self.count) {
            console.log("FAILURE: Expected " + self.count);
            self.util.failure();
            //throw new Error("FAILURE: Expected " + (this.state as any).count);
        }
        self.count++;
    =}
}
main reactor SendingInside {
    state count:number(0);
    timer t(0, 1 sec);
    p = new Printer();
    reaction(t) -> p.x {=
        self.count++;
        p.x.set(self.count);
    =}
}