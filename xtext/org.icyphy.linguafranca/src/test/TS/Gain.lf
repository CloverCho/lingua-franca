// Example in the Wiki.

// FIXME: Give this test a way to exit with failure.

    target TypeScript;
    reactor Scale(scale:number(2)) {
        input x:number;
        output y:number;
        reaction(x) -> y {=
            (this.state as any).y.set( (this.state as any).x.get() * (this.state as any).scale );
        =}
    }
    reactor Test {
        input x:number;
        state received_value:boolean(false);
        reaction(x) {=
            console.log("Received " + (this.state as any).x.get() + ".");
            (this.state as any).received_value = true;
            if ((this.state as any).x.get() != 2) {
                console.log("ERROR: Expected 2!");
                throw new Error("ERROR: Expected 2!");
            }
        =}
        reaction(shutdown) {=
            if ( !(this.state as any).receivedValue){
                console.log("ERROR: No value received by Test reactor!");
            } else {
                console.log("Test passes");
            }
        =}
    }
    main reactor Gain {
        g = new Scale();
        d = new Test();
        g.y -> d.x;
        reaction(startup) -> g.x {=
            (this.state as any).g.x.set(1);
        =}
    }