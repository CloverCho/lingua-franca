// Example in the Wiki.

    target TypeScript;
    reactor Scale(scale:number(2)) {
        input x:number;
        output y:number;
        reaction(x) -> y {=
            y.set((x.get() as number) * scale.get());
        =}
    }
    reactor Test {
        input x:number;
        state received_value:boolean(false);
        reaction(x) {=
            console.log("Received " + x.get() + ".");
            received_value.set(true);
            if ((x.get() as number) != 2) {
                console.log("ERROR: Expected 2!");
                this.util.exec.failure();
                //throw new Error("ERROR: Expected 2!");
            }
        =}
        reaction(shutdown) {=
            if (!received_value.get()){
                console.log("ERROR: No value received by Test reactor!");
                this.util.exec.failure();
                //throw new Error("No value received by Test reactor!");
            } else {
                console.log("Test passes");
            }
        =}
    }
    main reactor Gain {
        g = new Scale();
        d = new Test();
        g.y -> d.x;
        reaction(startup) -> g.x {=
            g.x.set(1);
        =}
    }