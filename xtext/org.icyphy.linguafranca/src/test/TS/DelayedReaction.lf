// Test delay made on a connection.
target TypeScript;

reactor Source {
    output out:number;
    timer t;
    reaction(t) -> out {=
        out.set(1);
    =} 
}

reactor Sink {
	input x:number;
	reaction(x) {=
        let elapsed = util.time.getElapsedLogicalTime();
        console.log("Nanoseconds since start: " + elapsed);
        if (! elapsed.isEqualTo(new UnitBasedTimeValue( 100, TimeUnit.msec))) {
            console.log("ERROR: Expected 100 msecs but got" + elapsed );
            util.exec.failure();
        }
	=}
}
main reactor DelayedReaction {
    
    source = new Source();
    sink = new Sink();
    source.out -> sink.x after 100 msec;
}