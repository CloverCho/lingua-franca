/*
 * generated by Xtext 2.17.0
 */
package org.icyphy.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.XtextRunner
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.icyphy.linguaFranca.Model
import org.junit.Assert
import org.junit.Test
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.^extension.ExtendWith
import org.junit.runner.RunWith
import org.eclipse.xtext.testing.validation.ValidationTestHelper
import org.icyphy.linguaFranca.LinguaFrancaPackage

@RunWith(XtextRunner)
@ExtendWith(InjectionExtension)
@InjectWith(LinguaFrancaInjectorProvider)
class LinguaFrancaValidationTests {
	@Inject extension ParseHelper<Model>
    @Inject extension ValidationTestHelper

    /**
     * Ensure that duplicate identifiers for actions reported.
     */
    @Test
    def void unresolvedReactorReference() {
        val model = '''
            target TypeScript;
            main reactor Foo {
                logical action bar;
                physical action bar;
            }
        '''.parse
        
        Assert.assertNotNull(model)
        Assertions.assertTrue(model.eResource.errors.isEmpty,
            "Encountered unexpected error while parsing: " +
                model.eResource.errors)
        System.out.println(model.eResource.errors)
        model.assertError(LinguaFrancaPackage::eINSTANCE.action,
            null, // FIXME: Maybe report something descriptive here?
            'Names of parameters, inputs, timers, and actions must be unique: bar')
    }
    
    /**
     * Ensure that duplicate identifiers for actions reported.
     */
    @Test
    def void disallowCppMainCalledMain() {
        val model = '''
            target Cpp;
            main reactor Main {
            }
        '''.parse
        
        Assert.assertNotNull(model)
        Assertions.assertTrue(model.eResource.errors.isEmpty,
            "Encountered unexpected error while parsing: " +
                model.eResource.errors)
        System.out.println(model.eResource.errors)
        model.assertError(LinguaFrancaPackage::eINSTANCE.reactor,
            null,
            "Main reactor cannot be named 'Main'")
    }
}
