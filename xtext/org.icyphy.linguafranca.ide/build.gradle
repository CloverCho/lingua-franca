import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
dependencies {
    implementation project(':org.icyphy.linguafranca')
    implementation "org.eclipse.xtext:org.eclipse.xtext.ide:${xtextVersion}"
    implementation "org.eclipse.xtext:org.eclipse.xtext.xbase.ide:${xtextVersion}"
}
    
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'

task generateLSPJar {
	description 'Creates a jar file that implements a language server.'	
	dependencies {
		implementation project(':org.icyphy.linguafranca')
		implementation "org.eclipse.xtext:org.eclipse.xtext.ide:${xtextVersion}"
		implementation "org.eclipse.xtext:org.eclipse.xtext.xbase.ide:${xtextVersion}"
	}
	
	apply plugin: 'application'
	apply plugin: 'com.github.johnrengelman.shadow'
	mainClassName = "org.eclipse.xtext.ide.server.ServerLauncher"
	
	shadowJar {
		minimize()
		from(project.convention.getPlugin(JavaPluginConvention).sourceSets.main.output)
		configurations = [project.configurations.runtime]
		exclude('META-INF/INDEX.LIST', 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA','schema/*',
			'.options', '.api_description', '*.profile', '*.html', 'about.*', 'about_files/*',
			'plugin.xml', 'modeling32.png', 'systembundle.properties', 'profile.list')
		classifier = 'ls'
		append('plugin.properties')
	}
}

generateLSPJar.finalizedBy shadowJar

task testJar(type: ShadowJar) {
    mainClassName = "org.eclipse.xtext.ide.server.ServerLauncher"
    minimize()
    from(project.convention.getPlugin(JavaPluginConvention).sourceSets.main.output)
    configurations = [project.configurations.runtime]
    exclude('META-INF/INDEX.LIST', 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA','schema/*',
        '.options', '.api_description', '*.profile', '*.html', 'about.*', 'about_files/*',
        'plugin.xml', 'modeling32.png', 'systembundle.properties', 'profile.list')
    classifier = 'ls'
    append('plugin.properties')
}
