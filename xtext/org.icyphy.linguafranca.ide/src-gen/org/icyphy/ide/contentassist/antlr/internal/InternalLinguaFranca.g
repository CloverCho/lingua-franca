/*
 * generated by Xtext 2.17.0
 */
grammar InternalLinguaFranca;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.icyphy.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.icyphy.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.icyphy.services.LinguaFrancaGrammarAccess;

}
@parser::members {
	private LinguaFrancaGrammarAccess grammarAccess;

	public void setGrammarAccess(LinguaFrancaGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTarget
entryRuleTarget
:
{ before(grammarAccess.getTargetRule()); }
	 ruleTarget
{ after(grammarAccess.getTargetRule()); } 
	 EOF 
;

// Rule Target
ruleTarget 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTargetAccess().getGroup()); }
		(rule__Target__Group__0)
		{ after(grammarAccess.getTargetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImport
entryRuleImport
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportAccess().getGroup()); }
		(rule__Import__Group__0)
		{ after(grammarAccess.getImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComponent
entryRuleComponent
:
{ before(grammarAccess.getComponentRule()); }
	 ruleComponent
{ after(grammarAccess.getComponentRule()); } 
	 EOF 
;

// Rule Component
ruleComponent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComponentAccess().getAlternatives()); }
		(rule__Component__Alternatives)
		{ after(grammarAccess.getComponentAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReactor
entryRuleReactor
:
{ before(grammarAccess.getReactorRule()); }
	 ruleReactor
{ after(grammarAccess.getReactorRule()); } 
	 EOF 
;

// Rule Reactor
ruleReactor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReactorAccess().getGroup()); }
		(rule__Reactor__Group__0)
		{ after(grammarAccess.getReactorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComposite
entryRuleComposite
:
{ before(grammarAccess.getCompositeRule()); }
	 ruleComposite
{ after(grammarAccess.getCompositeRule()); } 
	 EOF 
;

// Rule Composite
ruleComposite 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompositeAccess().getGroup()); }
		(rule__Composite__Group__0)
		{ after(grammarAccess.getCompositeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComponentBody
entryRuleComponentBody
:
{ before(grammarAccess.getComponentBodyRule()); }
	 ruleComponentBody
{ after(grammarAccess.getComponentBodyRule()); } 
	 EOF 
;

// Rule ComponentBody
ruleComponentBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComponentBodyAccess().getGroup()); }
		(rule__ComponentBody__Group__0)
		{ after(grammarAccess.getComponentBodyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInput
entryRuleInput
:
{ before(grammarAccess.getInputRule()); }
	 ruleInput
{ after(grammarAccess.getInputRule()); } 
	 EOF 
;

// Rule Input
ruleInput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInputAccess().getGroup()); }
		(rule__Input__Group__0)
		{ after(grammarAccess.getInputAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutput
entryRuleOutput
:
{ before(grammarAccess.getOutputRule()); }
	 ruleOutput
{ after(grammarAccess.getOutputRule()); } 
	 EOF 
;

// Rule Output
ruleOutput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutputAccess().getGroup()); }
		(rule__Output__Group__0)
		{ after(grammarAccess.getOutputAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimer
entryRuleTimer
:
{ before(grammarAccess.getTimerRule()); }
	 ruleTimer
{ after(grammarAccess.getTimerRule()); } 
	 EOF 
;

// Rule Timer
ruleTimer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimerAccess().getGroup()); }
		(rule__Timer__Group__0)
		{ after(grammarAccess.getTimerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAction
entryRuleAction
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionAccess().getGroup()); }
		(rule__Action__Group__0)
		{ after(grammarAccess.getActionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReaction
entryRuleReaction
:
{ before(grammarAccess.getReactionRule()); }
	 ruleReaction
{ after(grammarAccess.getReactionRule()); } 
	 EOF 
;

// Rule Reaction
ruleReaction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReactionAccess().getGroup()); }
		(rule__Reaction__Group__0)
		{ after(grammarAccess.getReactionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePreamble
entryRulePreamble
:
{ before(grammarAccess.getPreambleRule()); }
	 rulePreamble
{ after(grammarAccess.getPreambleRule()); } 
	 EOF 
;

// Rule Preamble
rulePreamble 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPreambleAccess().getGroup()); }
		(rule__Preamble__Group__0)
		{ after(grammarAccess.getPreambleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInstance
entryRuleInstance
:
{ before(grammarAccess.getInstanceRule()); }
	 ruleInstance
{ after(grammarAccess.getInstanceRule()); } 
	 EOF 
;

// Rule Instance
ruleInstance 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstanceAccess().getGroup()); }
		(rule__Instance__Group__0)
		{ after(grammarAccess.getInstanceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConnection
entryRuleConnection
:
{ before(grammarAccess.getConnectionRule()); }
	 ruleConnection
{ after(grammarAccess.getConnectionRule()); } 
	 EOF 
;

// Rule Connection
ruleConnection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConnectionAccess().getGroup()); }
		(rule__Connection__Group__0)
		{ after(grammarAccess.getConnectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignments
entryRuleAssignments
:
{ before(grammarAccess.getAssignmentsRule()); }
	 ruleAssignments
{ after(grammarAccess.getAssignmentsRule()); } 
	 EOF 
;

// Rule Assignments
ruleAssignments 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignmentsAccess().getGroup()); }
		(rule__Assignments__Group__0)
		{ after(grammarAccess.getAssignmentsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignment
entryRuleAssignment
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignmentAccess().getGroup()); }
		(rule__Assignment__Group__0)
		{ after(grammarAccess.getAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGets
entryRuleGets
:
{ before(grammarAccess.getGetsRule()); }
	 ruleGets
{ after(grammarAccess.getGetsRule()); } 
	 EOF 
;

// Rule Gets
ruleGets 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGetsAccess().getGroup()); }
		(rule__Gets__Group__0)
		{ after(grammarAccess.getGetsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParams
entryRuleParams
:
{ before(grammarAccess.getParamsRule()); }
	 ruleParams
{ after(grammarAccess.getParamsRule()); } 
	 EOF 
;

// Rule Params
ruleParams 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParamsAccess().getGroup()); }
		(rule__Params__Group__0)
		{ after(grammarAccess.getParamsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParam
entryRuleParam
:
{ before(grammarAccess.getParamRule()); }
	 ruleParam
{ after(grammarAccess.getParamRule()); } 
	 EOF 
;

// Rule Param
ruleParam 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParamAccess().getGroup()); }
		(rule__Param__Group__0)
		{ after(grammarAccess.getParamAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTiming
entryRuleTiming
:
{ before(grammarAccess.getTimingRule()); }
	 ruleTiming
{ after(grammarAccess.getTimingRule()); } 
	 EOF 
;

// Rule Timing
ruleTiming 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimingAccess().getGroup()); }
		(rule__Timing__Group__0)
		{ after(grammarAccess.getTimingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePort
entryRulePort
:
{ before(grammarAccess.getPortRule()); }
	 rulePort
{ after(grammarAccess.getPortRule()); } 
	 EOF 
;

// Rule Port
rulePort 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPortAccess().getAlternatives()); }
		(rule__Port__Alternatives)
		{ after(grammarAccess.getPortAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSets
entryRuleSets
:
{ before(grammarAccess.getSetsRule()); }
	 ruleSets
{ after(grammarAccess.getSetsRule()); } 
	 EOF 
;

// Rule Sets
ruleSets 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSetsAccess().getGroup()); }
		(rule__Sets__Group__0)
		{ after(grammarAccess.getSetsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValue
entryRuleValue
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueAccess().getAlternatives()); }
		(rule__Value__Alternatives)
		{ after(grammarAccess.getValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePath
entryRulePath
:
{ before(grammarAccess.getPathRule()); }
	 rulePath
{ after(grammarAccess.getPathRule()); } 
	 EOF 
;

// Rule Path
rulePath 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPathAccess().getGroup()); }
		(rule__Path__Group__0)
		{ after(grammarAccess.getPathAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getReactorParserRuleCall_0()); }
		ruleReactor
		{ after(grammarAccess.getComponentAccess().getReactorParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getComponentAccess().getCompositeParserRuleCall_1()); }
		ruleComposite
		{ after(grammarAccess.getComponentAccess().getCompositeParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentBody__Alternatives_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentBodyAccess().getTimersAssignment_5_0()); }
		(rule__ComponentBody__TimersAssignment_5_0)
		{ after(grammarAccess.getComponentBodyAccess().getTimersAssignment_5_0()); }
	)
	|
	(
		{ before(grammarAccess.getComponentBodyAccess().getActionsAssignment_5_1()); }
		(rule__ComponentBody__ActionsAssignment_5_1)
		{ after(grammarAccess.getComponentBodyAccess().getActionsAssignment_5_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__NameAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputAccess().getNameIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getInputAccess().getNameIDTerminalRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getInputAccess().getNameInputKeyword_1_0_1()); }
		'input'
		{ after(grammarAccess.getInputAccess().getNameInputKeyword_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__NameAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputAccess().getNameIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getOutputAccess().getNameIDTerminalRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getOutputAccess().getNameOutputKeyword_1_0_1()); }
		'output'
		{ after(grammarAccess.getOutputAccess().getNameOutputKeyword_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__NameAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimerAccess().getNameIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getTimerAccess().getNameIDTerminalRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getTimerAccess().getNameTimerKeyword_1_0_1()); }
		'timer'
		{ after(grammarAccess.getTimerAccess().getNameTimerKeyword_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__NameAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getNameIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getActionAccess().getNameIDTerminalRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getNameActionKeyword_1_0_1()); }
		'action'
		{ after(grammarAccess.getActionAccess().getNameActionKeyword_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timing__OffsetAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimingAccess().getOffsetNOWKeyword_1_0_0()); }
		'NOW'
		{ after(grammarAccess.getTimingAccess().getOffsetNOWKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getTimingAccess().getOffsetIDTerminalRuleCall_1_0_1()); }
		RULE_ID
		{ after(grammarAccess.getTimingAccess().getOffsetIDTerminalRuleCall_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getTimingAccess().getOffsetNUMBERTerminalRuleCall_1_0_2()); }
		RULE_NUMBER
		{ after(grammarAccess.getTimingAccess().getOffsetNUMBERTerminalRuleCall_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timing__PeriodAlternatives_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimingAccess().getPeriodONCEKeyword_2_1_0_0()); }
		'ONCE'
		{ after(grammarAccess.getTimingAccess().getPeriodONCEKeyword_2_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getTimingAccess().getPeriodSTOPKeyword_2_1_0_1()); }
		'STOP'
		{ after(grammarAccess.getTimingAccess().getPeriodSTOPKeyword_2_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getTimingAccess().getPeriodIDTerminalRuleCall_2_1_0_2()); }
		RULE_ID
		{ after(grammarAccess.getTimingAccess().getPeriodIDTerminalRuleCall_2_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getTimingAccess().getPeriodNUMBERTerminalRuleCall_2_1_0_3()); }
		RULE_NUMBER
		{ after(grammarAccess.getTimingAccess().getPeriodNUMBERTerminalRuleCall_2_1_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortAccess().getIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getPortAccess().getIDTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPortAccess().getGroup_1()); }
		(rule__Port__Group_1__0)
		{ after(grammarAccess.getPortAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Alternatives_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortAccess().getIDTerminalRuleCall_1_2_0()); }
		RULE_ID
		{ after(grammarAccess.getPortAccess().getIDTerminalRuleCall_1_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getPortAccess().getInputKeyword_1_2_1()); }
		'input'
		{ after(grammarAccess.getPortAccess().getInputKeyword_1_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getPortAccess().getOutputKeyword_1_2_2()); }
		'output'
		{ after(grammarAccess.getPortAccess().getOutputKeyword_1_2_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getTypeAccess().getIDTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getCODETerminalRuleCall_1()); }
		RULE_CODE
		{ after(grammarAccess.getTypeAccess().getCODETerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getValueAccess().getIDTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getNUMBERTerminalRuleCall_1()); }
		RULE_NUMBER
		{ after(grammarAccess.getValueAccess().getNUMBERTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getSTRINGTerminalRuleCall_2()); }
		RULE_STRING
		{ after(grammarAccess.getValueAccess().getSTRINGTerminalRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getCODETerminalRuleCall_3()); }
		RULE_CODE
		{ after(grammarAccess.getValueAccess().getCODETerminalRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getTargetAssignment_0()); }
	(rule__Model__TargetAssignment_0)
	{ after(grammarAccess.getModelAccess().getTargetAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getImportsAssignment_1()); }
	(rule__Model__ImportsAssignment_1)*
	{ after(grammarAccess.getModelAccess().getImportsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getModelAccess().getComponentsAssignment_2()); }
		(rule__Model__ComponentsAssignment_2)
		{ after(grammarAccess.getModelAccess().getComponentsAssignment_2()); }
	)
	(
		{ before(grammarAccess.getModelAccess().getComponentsAssignment_2()); }
		(rule__Model__ComponentsAssignment_2)*
		{ after(grammarAccess.getModelAccess().getComponentsAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Target__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Target__Group__0__Impl
	rule__Target__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetAccess().getTargetKeyword_0()); }
	'target'
	{ after(grammarAccess.getTargetAccess().getTargetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Target__Group__1__Impl
	rule__Target__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetAccess().getNameAssignment_1()); }
	(rule__Target__NameAssignment_1)
	{ after(grammarAccess.getTargetAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Target__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getTargetAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__1__Impl
	rule__Import__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getNameAssignment_1()); }
	(rule__Import__NameAssignment_1)
	{ after(grammarAccess.getImportAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getImportAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Reactor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reactor__Group__0__Impl
	rule__Reactor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reactor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReactorAccess().getReactorKeyword_0()); }
	'reactor'
	{ after(grammarAccess.getReactorAccess().getReactorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reactor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reactor__Group__1__Impl
	rule__Reactor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Reactor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReactorAccess().getComponentBodyAssignment_1()); }
	(rule__Reactor__ComponentBodyAssignment_1)
	{ after(grammarAccess.getReactorAccess().getComponentBodyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reactor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reactor__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reactor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReactorAccess().getRightCurlyBracketKeyword_2()); }
	'}'
	{ after(grammarAccess.getReactorAccess().getRightCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Composite__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composite__Group__0__Impl
	rule__Composite__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Composite__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeAccess().getCompositeKeyword_0()); }
	'composite'
	{ after(grammarAccess.getCompositeAccess().getCompositeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composite__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composite__Group__1__Impl
	rule__Composite__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Composite__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeAccess().getComponentBodyAssignment_1()); }
	(rule__Composite__ComponentBodyAssignment_1)
	{ after(grammarAccess.getCompositeAccess().getComponentBodyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composite__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composite__Group__2__Impl
	rule__Composite__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Composite__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeAccess().getInstancesAssignment_2()); }
	(rule__Composite__InstancesAssignment_2)*
	{ after(grammarAccess.getCompositeAccess().getInstancesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composite__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composite__Group__3__Impl
	rule__Composite__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Composite__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeAccess().getConnectionsAssignment_3()); }
	(rule__Composite__ConnectionsAssignment_3)*
	{ after(grammarAccess.getCompositeAccess().getConnectionsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composite__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composite__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Composite__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getCompositeAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentBody__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentBody__Group__0__Impl
	rule__ComponentBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentBody__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentBodyAccess().getNameAssignment_0()); }
	(rule__ComponentBody__NameAssignment_0)
	{ after(grammarAccess.getComponentBodyAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentBody__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentBody__Group__1__Impl
	rule__ComponentBody__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentBody__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentBodyAccess().getParametersAssignment_1()); }
	(rule__ComponentBody__ParametersAssignment_1)?
	{ after(grammarAccess.getComponentBodyAccess().getParametersAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentBody__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentBody__Group__2__Impl
	rule__ComponentBody__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentBody__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentBodyAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getComponentBodyAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentBody__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentBody__Group__3__Impl
	rule__ComponentBody__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentBody__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentBodyAccess().getInputsAssignment_3()); }
	(rule__ComponentBody__InputsAssignment_3)*
	{ after(grammarAccess.getComponentBodyAccess().getInputsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentBody__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentBody__Group__4__Impl
	rule__ComponentBody__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentBody__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentBodyAccess().getOutputsAssignment_4()); }
	(rule__ComponentBody__OutputsAssignment_4)*
	{ after(grammarAccess.getComponentBodyAccess().getOutputsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentBody__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentBody__Group__5__Impl
	rule__ComponentBody__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentBody__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentBodyAccess().getAlternatives_5()); }
	(rule__ComponentBody__Alternatives_5)*
	{ after(grammarAccess.getComponentBodyAccess().getAlternatives_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentBody__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentBody__Group__6__Impl
	rule__ComponentBody__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentBody__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentBodyAccess().getPreambleAssignment_6()); }
	(rule__ComponentBody__PreambleAssignment_6)?
	{ after(grammarAccess.getComponentBodyAccess().getPreambleAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentBody__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentBody__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentBody__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentBodyAccess().getReactionsAssignment_7()); }
	(rule__ComponentBody__ReactionsAssignment_7)*
	{ after(grammarAccess.getComponentBodyAccess().getReactionsAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Input__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__0__Impl
	rule__Input__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getInputKeyword_0()); }
	'input'
	{ after(grammarAccess.getInputAccess().getInputKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__1__Impl
	rule__Input__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getNameAssignment_1()); }
	(rule__Input__NameAssignment_1)
	{ after(grammarAccess.getInputAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__2__Impl
	rule__Input__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getGroup_2()); }
	(rule__Input__Group_2__0)?
	{ after(grammarAccess.getInputAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getInputAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Input__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group_2__0__Impl
	rule__Input__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getColonKeyword_2_0()); }
	':'
	{ after(grammarAccess.getInputAccess().getColonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getTypeAssignment_2_1()); }
	(rule__Input__TypeAssignment_2_1)
	{ after(grammarAccess.getInputAccess().getTypeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Output__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__0__Impl
	rule__Output__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getOutputKeyword_0()); }
	'output'
	{ after(grammarAccess.getOutputAccess().getOutputKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__1__Impl
	rule__Output__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getNameAssignment_1()); }
	(rule__Output__NameAssignment_1)
	{ after(grammarAccess.getOutputAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__2__Impl
	rule__Output__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getGroup_2()); }
	(rule__Output__Group_2__0)?
	{ after(grammarAccess.getOutputAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getOutputAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Output__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group_2__0__Impl
	rule__Output__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getColonKeyword_2_0()); }
	':'
	{ after(grammarAccess.getOutputAccess().getColonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getTypeAssignment_2_1()); }
	(rule__Output__TypeAssignment_2_1)
	{ after(grammarAccess.getOutputAccess().getTypeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Timer__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timer__Group__0__Impl
	rule__Timer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimerAccess().getTimerKeyword_0()); }
	'timer'
	{ after(grammarAccess.getTimerAccess().getTimerKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timer__Group__1__Impl
	rule__Timer__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimerAccess().getNameAssignment_1()); }
	(rule__Timer__NameAssignment_1)
	{ after(grammarAccess.getTimerAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timer__Group__2__Impl
	rule__Timer__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimerAccess().getTimingAssignment_2()); }
	(rule__Timer__TimingAssignment_2)?
	{ after(grammarAccess.getTimerAccess().getTimingAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timer__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimerAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getTimerAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__0__Impl
	rule__Action__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getActionKeyword_0()); }
	'action'
	{ after(grammarAccess.getActionAccess().getActionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__1__Impl
	rule__Action__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getNameAssignment_1()); }
	(rule__Action__NameAssignment_1)
	{ after(grammarAccess.getActionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__2__Impl
	rule__Action__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getTimingAssignment_2()); }
	(rule__Action__TimingAssignment_2)?
	{ after(grammarAccess.getActionAccess().getTimingAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getActionAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Reaction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reaction__Group__0__Impl
	rule__Reaction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReactionAccess().getReactionKeyword_0()); }
	'reaction'
	{ after(grammarAccess.getReactionAccess().getReactionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reaction__Group__1__Impl
	rule__Reaction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReactionAccess().getGroup_1()); }
	(rule__Reaction__Group_1__0)?
	{ after(grammarAccess.getReactionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reaction__Group__2__Impl
	rule__Reaction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReactionAccess().getGetsAssignment_2()); }
	(rule__Reaction__GetsAssignment_2)?
	{ after(grammarAccess.getReactionAccess().getGetsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reaction__Group__3__Impl
	rule__Reaction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReactionAccess().getSetsAssignment_3()); }
	(rule__Reaction__SetsAssignment_3)?
	{ after(grammarAccess.getReactionAccess().getSetsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reaction__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReactionAccess().getCodeAssignment_4()); }
	(rule__Reaction__CodeAssignment_4)
	{ after(grammarAccess.getReactionAccess().getCodeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Reaction__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reaction__Group_1__0__Impl
	rule__Reaction__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReactionAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getReactionAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reaction__Group_1__1__Impl
	rule__Reaction__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReactionAccess().getGroup_1_1()); }
	(rule__Reaction__Group_1_1__0)?
	{ after(grammarAccess.getReactionAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reaction__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReactionAccess().getRightParenthesisKeyword_1_2()); }
	')'
	{ after(grammarAccess.getReactionAccess().getRightParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Reaction__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reaction__Group_1_1__0__Impl
	rule__Reaction__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReactionAccess().getTriggersAssignment_1_1_0()); }
	(rule__Reaction__TriggersAssignment_1_1_0)
	{ after(grammarAccess.getReactionAccess().getTriggersAssignment_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reaction__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReactionAccess().getGroup_1_1_1()); }
	(rule__Reaction__Group_1_1_1__0)*
	{ after(grammarAccess.getReactionAccess().getGroup_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Reaction__Group_1_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reaction__Group_1_1_1__0__Impl
	rule__Reaction__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group_1_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReactionAccess().getCommaKeyword_1_1_1_0()); }
	','
	{ after(grammarAccess.getReactionAccess().getCommaKeyword_1_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group_1_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reaction__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group_1_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReactionAccess().getTriggersAssignment_1_1_1_1()); }
	(rule__Reaction__TriggersAssignment_1_1_1_1)
	{ after(grammarAccess.getReactionAccess().getTriggersAssignment_1_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Preamble__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__Group__0__Impl
	rule__Preamble__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreambleAccess().getPreambleKeyword_0()); }
	'preamble'
	{ after(grammarAccess.getPreambleAccess().getPreambleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreambleAccess().getCodeAssignment_1()); }
	(rule__Preamble__CodeAssignment_1)
	{ after(grammarAccess.getPreambleAccess().getCodeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instance__Group__0__Impl
	rule__Instance__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstanceAccess().getNameAssignment_0()); }
	(rule__Instance__NameAssignment_0)
	{ after(grammarAccess.getInstanceAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instance__Group__1__Impl
	rule__Instance__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstanceAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getInstanceAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instance__Group__2__Impl
	rule__Instance__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstanceAccess().getNewKeyword_2()); }
	'new'
	{ after(grammarAccess.getInstanceAccess().getNewKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instance__Group__3__Impl
	rule__Instance__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstanceAccess().getActorClassAssignment_3()); }
	(rule__Instance__ActorClassAssignment_3)
	{ after(grammarAccess.getInstanceAccess().getActorClassAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instance__Group__4__Impl
	rule__Instance__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstanceAccess().getGroup_4()); }
	(rule__Instance__Group_4__0)?
	{ after(grammarAccess.getInstanceAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instance__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstanceAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getInstanceAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instance__Group_4__0__Impl
	rule__Instance__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstanceAccess().getLeftParenthesisKeyword_4_0()); }
	'('
	{ after(grammarAccess.getInstanceAccess().getLeftParenthesisKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instance__Group_4__1__Impl
	rule__Instance__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstanceAccess().getParametersAssignment_4_1()); }
	(rule__Instance__ParametersAssignment_4_1)?
	{ after(grammarAccess.getInstanceAccess().getParametersAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instance__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstanceAccess().getRightParenthesisKeyword_4_2()); }
	')'
	{ after(grammarAccess.getInstanceAccess().getRightParenthesisKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connection__Group__0__Impl
	rule__Connection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectionAccess().getLeftPortAssignment_0()); }
	(rule__Connection__LeftPortAssignment_0)
	{ after(grammarAccess.getConnectionAccess().getLeftPortAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connection__Group__1__Impl
	rule__Connection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectionAccess().getHyphenMinusGreaterThanSignKeyword_1()); }
	'->'
	{ after(grammarAccess.getConnectionAccess().getHyphenMinusGreaterThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connection__Group__2__Impl
	rule__Connection__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectionAccess().getRightPortAssignment_2()); }
	(rule__Connection__RightPortAssignment_2)
	{ after(grammarAccess.getConnectionAccess().getRightPortAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connection__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectionAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getConnectionAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignments__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignments__Group__0__Impl
	rule__Assignments__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignments__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentsAccess().getAssignmentsAssignment_0()); }
	(rule__Assignments__AssignmentsAssignment_0)
	{ after(grammarAccess.getAssignmentsAccess().getAssignmentsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignments__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignments__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignments__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentsAccess().getGroup_1()); }
	(rule__Assignments__Group_1__0)*
	{ after(grammarAccess.getAssignmentsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignments__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignments__Group_1__0__Impl
	rule__Assignments__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignments__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentsAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getAssignmentsAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignments__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignments__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignments__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentsAccess().getAssignmentsAssignment_1_1()); }
	(rule__Assignments__AssignmentsAssignment_1_1)
	{ after(grammarAccess.getAssignmentsAccess().getAssignmentsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__0__Impl
	rule__Assignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getNameAssignment_0()); }
	(rule__Assignment__NameAssignment_0)
	{ after(grammarAccess.getAssignmentAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__1__Impl
	rule__Assignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getValueAssignment_2()); }
	(rule__Assignment__ValueAssignment_2)
	{ after(grammarAccess.getAssignmentAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Gets__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Gets__Group__0__Impl
	rule__Gets__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Gets__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGetsAccess().getGetsAssignment_0()); }
	(rule__Gets__GetsAssignment_0)
	{ after(grammarAccess.getGetsAccess().getGetsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Gets__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Gets__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Gets__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGetsAccess().getGroup_1()); }
	(rule__Gets__Group_1__0)?
	{ after(grammarAccess.getGetsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Gets__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Gets__Group_1__0__Impl
	rule__Gets__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Gets__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGetsAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getGetsAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Gets__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Gets__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Gets__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGetsAccess().getGetsAssignment_1_1()); }
	(rule__Gets__GetsAssignment_1_1)
	{ after(grammarAccess.getGetsAccess().getGetsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Params__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Params__Group__0__Impl
	rule__Params__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Params__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamsAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getParamsAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Params__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Params__Group__1__Impl
	rule__Params__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Params__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamsAccess().getParamsAssignment_1()); }
	(rule__Params__ParamsAssignment_1)
	{ after(grammarAccess.getParamsAccess().getParamsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Params__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Params__Group__2__Impl
	rule__Params__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Params__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamsAccess().getGroup_2()); }
	(rule__Params__Group_2__0)*
	{ after(grammarAccess.getParamsAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Params__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Params__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Params__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamsAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getParamsAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Params__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Params__Group_2__0__Impl
	rule__Params__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Params__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamsAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getParamsAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Params__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Params__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Params__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamsAccess().getParamsAssignment_2_1()); }
	(rule__Params__ParamsAssignment_2_1)
	{ after(grammarAccess.getParamsAccess().getParamsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Param__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Param__Group__0__Impl
	rule__Param__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamAccess().getConstKeyword_0()); }
	('const')?
	{ after(grammarAccess.getParamAccess().getConstKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Param__Group__1__Impl
	rule__Param__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamAccess().getNameAssignment_1()); }
	(rule__Param__NameAssignment_1)
	{ after(grammarAccess.getParamAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Param__Group__2__Impl
	rule__Param__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamAccess().getGroup_2()); }
	(rule__Param__Group_2__0)?
	{ after(grammarAccess.getParamAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Param__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamAccess().getGroup_3()); }
	(rule__Param__Group_3__0)?
	{ after(grammarAccess.getParamAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Param__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Param__Group_2__0__Impl
	rule__Param__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamAccess().getColonKeyword_2_0()); }
	':'
	{ after(grammarAccess.getParamAccess().getColonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Param__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamAccess().getTypeAssignment_2_1()); }
	(rule__Param__TypeAssignment_2_1)
	{ after(grammarAccess.getParamAccess().getTypeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Param__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Param__Group_3__0__Impl
	rule__Param__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamAccess().getLeftParenthesisKeyword_3_0()); }
	'('
	{ after(grammarAccess.getParamAccess().getLeftParenthesisKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Param__Group_3__1__Impl
	rule__Param__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamAccess().getValueAssignment_3_1()); }
	(rule__Param__ValueAssignment_3_1)
	{ after(grammarAccess.getParamAccess().getValueAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Param__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamAccess().getRightParenthesisKeyword_3_2()); }
	')'
	{ after(grammarAccess.getParamAccess().getRightParenthesisKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Timing__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timing__Group__0__Impl
	rule__Timing__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Timing__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimingAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getTimingAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timing__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timing__Group__1__Impl
	rule__Timing__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Timing__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimingAccess().getOffsetAssignment_1()); }
	(rule__Timing__OffsetAssignment_1)
	{ after(grammarAccess.getTimingAccess().getOffsetAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timing__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timing__Group__2__Impl
	rule__Timing__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Timing__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimingAccess().getGroup_2()); }
	(rule__Timing__Group_2__0)?
	{ after(grammarAccess.getTimingAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timing__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timing__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Timing__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimingAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getTimingAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Timing__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timing__Group_2__0__Impl
	rule__Timing__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Timing__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimingAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getTimingAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timing__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timing__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Timing__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimingAccess().getPeriodAssignment_2_1()); }
	(rule__Timing__PeriodAssignment_2_1)
	{ after(grammarAccess.getTimingAccess().getPeriodAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Port__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Port__Group_1__0__Impl
	rule__Port__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortAccess().getIDTerminalRuleCall_1_0()); }
	RULE_ID
	{ after(grammarAccess.getPortAccess().getIDTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Port__Group_1__1__Impl
	rule__Port__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortAccess().getFullStopKeyword_1_1()); }
	'.'
	{ after(grammarAccess.getPortAccess().getFullStopKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Port__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortAccess().getAlternatives_1_2()); }
	(rule__Port__Alternatives_1_2)
	{ after(grammarAccess.getPortAccess().getAlternatives_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sets__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sets__Group__0__Impl
	rule__Sets__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sets__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetsAccess().getHyphenMinusGreaterThanSignKeyword_0()); }
	'->'
	{ after(grammarAccess.getSetsAccess().getHyphenMinusGreaterThanSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sets__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sets__Group__1__Impl
	rule__Sets__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sets__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetsAccess().getSetsAssignment_1()); }
	(rule__Sets__SetsAssignment_1)
	{ after(grammarAccess.getSetsAccess().getSetsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sets__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sets__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sets__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetsAccess().getGroup_2()); }
	(rule__Sets__Group_2__0)?
	{ after(grammarAccess.getSetsAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sets__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sets__Group_2__0__Impl
	rule__Sets__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sets__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetsAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getSetsAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sets__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sets__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sets__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetsAccess().getSetsAssignment_2_1()); }
	(rule__Sets__SetsAssignment_2_1)
	{ after(grammarAccess.getSetsAccess().getSetsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Path__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Path__Group__0__Impl
	rule__Path__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getPathAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Path__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathAccess().getGroup_1()); }
	(rule__Path__Group_1__0)*
	{ after(grammarAccess.getPathAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Path__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Path__Group_1__0__Impl
	rule__Path__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getPathAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Path__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getPathAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__TargetAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getTargetTargetParserRuleCall_0_0()); }
		ruleTarget
		{ after(grammarAccess.getModelAccess().getTargetTargetParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ImportsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getImportsImportParserRuleCall_1_0()); }
		ruleImport
		{ after(grammarAccess.getModelAccess().getImportsImportParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ComponentsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getComponentsComponentParserRuleCall_2_0()); }
		ruleComponent
		{ after(grammarAccess.getModelAccess().getComponentsComponentParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTargetAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTargetAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getNamePathParserRuleCall_1_0()); }
		rulePath
		{ after(grammarAccess.getImportAccess().getNamePathParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reactor__ComponentBodyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReactorAccess().getComponentBodyComponentBodyParserRuleCall_1_0()); }
		ruleComponentBody
		{ after(grammarAccess.getReactorAccess().getComponentBodyComponentBodyParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composite__ComponentBodyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositeAccess().getComponentBodyComponentBodyParserRuleCall_1_0()); }
		ruleComponentBody
		{ after(grammarAccess.getCompositeAccess().getComponentBodyComponentBodyParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composite__InstancesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositeAccess().getInstancesInstanceParserRuleCall_2_0()); }
		ruleInstance
		{ after(grammarAccess.getCompositeAccess().getInstancesInstanceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composite__ConnectionsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositeAccess().getConnectionsConnectionParserRuleCall_3_0()); }
		ruleConnection
		{ after(grammarAccess.getCompositeAccess().getConnectionsConnectionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentBody__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentBodyAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getComponentBodyAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentBody__ParametersAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentBodyAccess().getParametersParamsParserRuleCall_1_0()); }
		ruleParams
		{ after(grammarAccess.getComponentBodyAccess().getParametersParamsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentBody__InputsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentBodyAccess().getInputsInputParserRuleCall_3_0()); }
		ruleInput
		{ after(grammarAccess.getComponentBodyAccess().getInputsInputParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentBody__OutputsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentBodyAccess().getOutputsOutputParserRuleCall_4_0()); }
		ruleOutput
		{ after(grammarAccess.getComponentBodyAccess().getOutputsOutputParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentBody__TimersAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentBodyAccess().getTimersTimerParserRuleCall_5_0_0()); }
		ruleTimer
		{ after(grammarAccess.getComponentBodyAccess().getTimersTimerParserRuleCall_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentBody__ActionsAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentBodyAccess().getActionsActionParserRuleCall_5_1_0()); }
		ruleAction
		{ after(grammarAccess.getComponentBodyAccess().getActionsActionParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentBody__PreambleAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentBodyAccess().getPreamblePreambleParserRuleCall_6_0()); }
		rulePreamble
		{ after(grammarAccess.getComponentBodyAccess().getPreamblePreambleParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentBody__ReactionsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentBodyAccess().getReactionsReactionParserRuleCall_7_0()); }
		ruleReaction
		{ after(grammarAccess.getComponentBodyAccess().getReactionsReactionParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputAccess().getNameAlternatives_1_0()); }
		(rule__Input__NameAlternatives_1_0)
		{ after(grammarAccess.getInputAccess().getNameAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__TypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputAccess().getTypeTypeParserRuleCall_2_1_0()); }
		ruleType
		{ after(grammarAccess.getInputAccess().getTypeTypeParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputAccess().getNameAlternatives_1_0()); }
		(rule__Output__NameAlternatives_1_0)
		{ after(grammarAccess.getOutputAccess().getNameAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__TypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputAccess().getTypeTypeParserRuleCall_2_1_0()); }
		ruleType
		{ after(grammarAccess.getOutputAccess().getTypeTypeParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimerAccess().getNameAlternatives_1_0()); }
		(rule__Timer__NameAlternatives_1_0)
		{ after(grammarAccess.getTimerAccess().getNameAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__TimingAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimerAccess().getTimingTimingParserRuleCall_2_0()); }
		ruleTiming
		{ after(grammarAccess.getTimerAccess().getTimingTimingParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getNameAlternatives_1_0()); }
		(rule__Action__NameAlternatives_1_0)
		{ after(grammarAccess.getActionAccess().getNameAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__TimingAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getTimingTimingParserRuleCall_2_0()); }
		ruleTiming
		{ after(grammarAccess.getActionAccess().getTimingTimingParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__TriggersAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReactionAccess().getTriggersIDTerminalRuleCall_1_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getReactionAccess().getTriggersIDTerminalRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__TriggersAssignment_1_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReactionAccess().getTriggersIDTerminalRuleCall_1_1_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getReactionAccess().getTriggersIDTerminalRuleCall_1_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__GetsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReactionAccess().getGetsGetsParserRuleCall_2_0()); }
		ruleGets
		{ after(grammarAccess.getReactionAccess().getGetsGetsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__SetsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReactionAccess().getSetsSetsParserRuleCall_3_0()); }
		ruleSets
		{ after(grammarAccess.getReactionAccess().getSetsSetsParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__CodeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReactionAccess().getCodeCODETerminalRuleCall_4_0()); }
		RULE_CODE
		{ after(grammarAccess.getReactionAccess().getCodeCODETerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__CodeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreambleAccess().getCodeCODETerminalRuleCall_1_0()); }
		RULE_CODE
		{ after(grammarAccess.getPreambleAccess().getCodeCODETerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstanceAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getInstanceAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__ActorClassAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstanceAccess().getActorClassIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getInstanceAccess().getActorClassIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__ParametersAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstanceAccess().getParametersAssignmentsParserRuleCall_4_1_0()); }
		ruleAssignments
		{ after(grammarAccess.getInstanceAccess().getParametersAssignmentsParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__LeftPortAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectionAccess().getLeftPortPortParserRuleCall_0_0()); }
		rulePort
		{ after(grammarAccess.getConnectionAccess().getLeftPortPortParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__RightPortAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectionAccess().getRightPortPortParserRuleCall_2_0()); }
		rulePort
		{ after(grammarAccess.getConnectionAccess().getRightPortPortParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignments__AssignmentsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentsAccess().getAssignmentsAssignmentParserRuleCall_0_0()); }
		ruleAssignment
		{ after(grammarAccess.getAssignmentsAccess().getAssignmentsAssignmentParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignments__AssignmentsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentsAccess().getAssignmentsAssignmentParserRuleCall_1_1_0()); }
		ruleAssignment
		{ after(grammarAccess.getAssignmentsAccess().getAssignmentsAssignmentParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getAssignmentAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getValueValueParserRuleCall_2_0()); }
		ruleValue
		{ after(grammarAccess.getAssignmentAccess().getValueValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Gets__GetsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGetsAccess().getGetsIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getGetsAccess().getGetsIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Gets__GetsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGetsAccess().getGetsIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getGetsAccess().getGetsIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Params__ParamsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParamsAccess().getParamsParamParserRuleCall_1_0()); }
		ruleParam
		{ after(grammarAccess.getParamsAccess().getParamsParamParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Params__ParamsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParamsAccess().getParamsParamParserRuleCall_2_1_0()); }
		ruleParam
		{ after(grammarAccess.getParamsAccess().getParamsParamParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParamAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getParamAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__TypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParamAccess().getTypeTypeParserRuleCall_2_1_0()); }
		ruleType
		{ after(grammarAccess.getParamAccess().getTypeTypeParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__ValueAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParamAccess().getValueValueParserRuleCall_3_1_0()); }
		ruleValue
		{ after(grammarAccess.getParamAccess().getValueValueParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timing__OffsetAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimingAccess().getOffsetAlternatives_1_0()); }
		(rule__Timing__OffsetAlternatives_1_0)
		{ after(grammarAccess.getTimingAccess().getOffsetAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timing__PeriodAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimingAccess().getPeriodAlternatives_2_1_0()); }
		(rule__Timing__PeriodAlternatives_2_1_0)
		{ after(grammarAccess.getTimingAccess().getPeriodAlternatives_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sets__SetsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetsAccess().getSetsIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSetsAccess().getSetsIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sets__SetsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetsAccess().getSetsIDTerminalRuleCall_2_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSetsAccess().getSetsIDTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_NUMBER : '-'? RULE_INT ('.' RULE_INT)?;

RULE_CODE : '{=' .* '=}';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

fragment RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
