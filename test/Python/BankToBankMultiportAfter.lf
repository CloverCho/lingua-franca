 // Check bank of reactors sending to bank of reactors with multiports.
target Python {
    timeout: 2 sec,
    fast: true,
    threads: 4
};
reactor Source(instance:int(0), width:int(1)) {
    timer t(0, 200 msec);
    output[width] out:int;
    state s:int(0);
    reaction(t) -> out {=
        for i in range(len(out)):
            out[i].set(self.s)
            self.s += 1
    =}
}
reactor Destination(instance:int(0), width:int(1)) {
    state s:int(6);
    input[width] _in:int;
    reaction(_in) {=
        sm = 0
        for i in range(len(_in)):
            if _in[i].is_present is True:
                sm += _in[i].value
        print("Sum of received: ", sm)
        if sm != self.s:
            sys.stderr.write("ERROR: Expected {:d}.\n".format(self.s))
            exit(1)

        self.s += 16
    =}
    reaction(shutdown) {=
        if self.s <= 6:
            sys.stderr.write("ERROR: Destination received no input!\n")
            exit(1)

        print("Success.")
    =}
}
main reactor BankToBankMultiport(bank_width:int(4)) { 
	a = new[bank_width] Source(width = 4);
	b = new[bank_width] Destination(width = 4);
	a.out -> b._in after 200 msec;
}