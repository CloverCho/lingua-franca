// Check reaction to multiport input of a contained reactor.
target Python {
    timeout: 2 sec,
    fast: true
}; 
reactor Destination(width(1)) {
    state s(6);
    input[width] _in;
    reaction(_in) {=
        sm = 0;
        for i in range(len(_in)):
            if _in[i].is_present:
                sm += _in[i].value
        print("Sum of received: ", sm)
        if sm != self.s:
            sys.stderr.write("ERROR: Expected {:d}.\n".format(self.s))
            exit(1)

        self.s += 16
    =}
    reaction(shutdown) {=
        if self.s <= 6:
            sys.stderr.write("ERROR: Destination received no input!\n")
            exit(1)
        print("Success.\n")
    =}
}
main reactor MultiportFromReaction {
    timer t(0, 200 msec);
    state s(0);
    b = new Destination(width = 4);
    reaction(t) -> b._in {=
        for i in range(len(b._in)):
            print("Before SET, b.in[{:d}].is_present has value {:d}".format(i, b._in[i].is_present))
            b._in[i].set(self.s)
            self.s += 1
            print("AFTER set, b.in[{:d}].is_present has value {:d}".format(i, b._in[i].is_present))
            print("AFTER set, b.in[{:d}].value has value {:d}".format(i, b._in[i].value))
    =}
}
