// Check multiport output to bank of recipients where the width of the bank is inferred.
target Python {
    timeout: 2 sec,
    fast: true
}; 
reactor Source {
    output[3] out;
    reaction(startup) -> out {=
        for i in range(len(out)):
            out[i].set(i);
    =}
}
reactor Destination(instance(0)) {
    input _in;
    state received(false);
    reaction(_in) {=
        print("Destination {:d} received {:d}.\n".format(self.instance, _in.value))
        if self.instance != _in.value:
            sys.stderr.write("ERROR: Expected {:d}.\n".format(self.instance))
            exit(1)
        if get_elapsed_logical_time() != SEC(1):
            sys.stderr.write("ERROR: Expected to receive input after one second.\n")
            exit(2)
        self.received = True
    =}
    reaction(shutdown) {=
        if self.received is not True:
            sys.stderr.write("ERROR: Destination {:d} received no input!\n".format(self.instance))
            exit(3)
        print("Success.")
    =}
}

main reactor MultiportToBank { 
    a = new Source();
    b = new[3] Destination();
    a.out -> b._in after 1 sec; // Width of the bank of delays will be inferred.
}