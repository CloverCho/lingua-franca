/** 
 * Tests distributed execution of modes.
 * 
 * Depends on DistributedModes test.
 */
target Python {
    timeout: 5 sec,
    coordination: decentralized
};

import Controller, SingleModalFederate, MergeTwo from "DistributedModes.lf"
import TraceTesting from "util/TraceTesting.lf"

federated reactor {
    control = new Controller()
    modal1 = new SingleModalFederate()
    modal2 = new SingleModalFederate()
    merger = new MergeTwo(size = 5)
    test = new TraceTesting(
        events_size = 10,
        trace = (
            200000000,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            500000000,0,0,0,1,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,
            250000000,0,0,1,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,
            250000000,1,1,0,1,0,1,1,1,0,0,0,0,0,1,1,1,0,0,0,0,
            250000000,0,1,0,1,0,1,0,1,0,0,0,0,1,1,0,1,0,0,0,0,
            250000000,0,1,0,1,0,1,0,1,1,1,1,1,0,1,0,1,1,1,0,0,
            250000000,0,1,0,1,0,1,1,1,0,1,0,1,0,1,0,1,0,1,0,0,
            250000000,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,
            250000000,0,1,0,1,1,1,0,1,0,1,0,1,0,1,0,1,1,1,0,1,
            250000000,0,1,1,1,0,1,0,1,0,1,1,1,0,1,0,1,0,1,0,1,
            250000000,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,0,1,0,1,
            250000000,1,1,0,1,1,1,1,1,0,1,0,1,1,1,0,1,0,1,0,1,
            500000000,0,1,0,1,0,1,0,1,1,1,1,1,0,1,1,1,1,1,0,1,
            250000000,0,1,0,1,0,1,1,1,0,1,0,1,0,1,0,1,0,1,0,1,
            250000000,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,
            250000000,0,1,1,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,0,1,
            250000000,0,1,0,1,0,1,0,1,0,1,1,1,0,1,0,1,0,1,0,1,
            250000000,0,1,0,1,1,1,0,1,0,1,0,1,1,1,0,1,0,1,0,1
        ), training = False)
    
    control.next -> modal1.next
    control.next -> modal2.next
    modal1.outputs -> merger.left after 200msec
    modal2.outputs -> merger.right after 700msec
    merger.merged -> test.events
}
