// Test reacting to and reading outputs from a contained
// reactor in various permutations.
target TypeScript;
reactor Contained {
    output out:number;
    reaction(startup) -> out {=
        out = 42;
    =}
}
main reactor ReadOutputOfContainedReactor {
    c = new Contained();
    state count:number(0);
    reaction(startup) c.out {=
        console.log("Startup reaction reading output of contained reactor: " + c.out);
        count++;
    =}
    reaction(c.out) {=
        console.log("Reading output of contained reactor: " + c.out);
        count++;
    =}
    reaction(startup, c.out) {=
        console.log("Alternate triggering reading output of contained reactor: " + c.out);
        count++;
    =}
    reaction(shutdown) {=
        if (count != 3) {
            console.log("FAILURE: One of the reactions failed to trigger.");
            console.log("Count is: " + count)
            util.failure();
        } else {
            console.log("Test passes.");
        }
    =}
}