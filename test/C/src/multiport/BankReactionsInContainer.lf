/**
 * This tests an output that is broadcast back to a multiport input of a bank.
 */
target C {
    timeout: 1 sec,
};
reactor R (bank_index:int(0)) {
    output[2] out:int;
    input[2] in:int;
    
    reaction(startup) -> out {=
        for (int i = 0; i < out_width; i++) {
            SET(out[0], self->bank_index * i + i);
        }
    =}

    reaction(in) {=
        for (int i = 0; i < in_width; i++) {
            if (in[i]->is_present) {
                info_print("Inner received %d in bank %d, channel %d", in[i]->value, self->bank_index, i);
            }
        }
    =}
}
main reactor {
    s = new[2] R();
    
    reaction(startup) -> s.in {=
        int count = 0;
        for (int i = 0; i < s_width; i++) {
            for (int j = 0; j < s[i].in_width; j++) {
                info_print("Sending %d to bank %d channel %d.", count, i, j);
                SET(s[i].in[j], count++);
            }
        }
    =}
    reaction(s.out) {=
        for (int j = 0; j < s_width; j++) {
            for (int i = 0; i < s[j].out_width; i++) {
                info_print("Outer received %d on channel %d, bank member %d.", s[j].out[i]->value, i, j);
            }
        }
    =}
}
