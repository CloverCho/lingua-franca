/**
 * Test _lf_schedule_at_tag which is an internal API function
 * not meant to be used in user code.
 *  
 * @author Soroush Bateni
 */

target C {
    timeout: 1 sec,
    keepalive: true,
    threads: 1
};

reactor Scheduler(take_a_break_after:int(10), break_interval:time(400 msec)) {
    logical action act;
    state micro_delay:int(0);
    state scheduled_micro_delay:int(0);
    state sent_messages:int(0);
    reaction(startup, act) -> act {=
        if (get_microstep() !=  self->scheduled_micro_delay) {
            fprintf(stderr, "ERROR: Received messaged at the wrong microstep.\n");
            exit(1);
        }
        printf("At tag (%lld, %u) got value %d.\n",
            get_elapsed_logical_time(),
            get_microstep(),
            self->sent_messages);
        self->sent_messages++;
        self->micro_delay++;
        self->scheduled_micro_delay = self->micro_delay;
        tag_t tag = get_current_tag();
        if (self->sent_messages < self->take_a_break_after) {
            tag.microstep = self->micro_delay;
        	_lf_schedule_at_tag(act->trigger, tag, NULL);
        } else {
            // Take a break
        	self->sent_messages = 0;
        	// self->micro_delay = 0;
        	// self->scheduled_micro_delay = 0;
        	tag.time += self->break_interval;
        	tag.microstep = self->micro_delay;
            _lf_schedule_at_tag(act->trigger, tag, NULL);
        }
    =}
}

federated reactor ScheduleAt {
    sender = new Scheduler();
}