/**
 * Test _lf_schedule_at_tag which is an internal API function
 * not meant to be used in user code.
 *  
 * @author Soroush Bateni
 */

target C {
    timeout: 1 sec,
    keepalive: true,
    threads: 1
};

reactor Scheduler {
    logical action act;
    state microstep_delay_list:int[](0,1,1,2,0,0,1,1,0,2,3,3,4,4, 5); // List of microsteps
    state times:int[](0,0,0,0,400 msec, 400 msec, 400 msec, 400 msec,
                      800 msec, 800 msec, 800 msec, 800 msec, 900 msec, 900 msec, 900 msec); // List of the corresponding times
    state scheduled_micro_delay:int(0);
    state sent_messages:int(0);
    reaction(startup) -> act {=
        if (get_microstep() !=  self->scheduled_micro_delay) {
            fprintf(stderr, "ERROR: Received messaged at the wrong microstep.\n");
            exit(1);
        }
        for (int i=0; i < 16; i++) {
            _lf_schedule_at_tag(act->trigger,
                (tag_t) { .time = self->times[i] + get_logical_time(), .microstep = self->microstep_delay_list[i]},
                NULL);
        }
    =}
    
    reaction(act) {=
        tag_t tag = get_current_tag();
        printf("Triggered at tag (%lld, %u).\n", get_elapsed_logical_time(), tag.microstep);
    =}
}

federated reactor ScheduleAt {
    sender = new Scheduler();
}