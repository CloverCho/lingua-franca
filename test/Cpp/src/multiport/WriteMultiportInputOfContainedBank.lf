// Test writing multiport inputs to a contained reactor bank
target Cpp;
reactor Contained(instance:size_t(0)) {
    input[4] in:unsigned;
    state count:int(0);
    reaction(in)  {=
        for (size_t i = 0; i < 3; i++) {
        	unsigned result = *in[i].get();
        	std::cout << "Instance " << instance << " received " << result << '\n';
        	if (result != instance * i) {
            	std::cout << "FAILURE: expected " << i * instance << '\n';
            	exit(2);
        	}
        }
        count++;
    =}
    reaction(shutdown) {=
        if (count != 1) {
            std::cerr << "ERROR: One of the reactions failed to trigger.\n";
            exit(1);
        }
    =}
}

main reactor {
    c = new[4] Contained();
    reaction(startup) -> c.in {=
        for (size_t i = 0; i < c.size(); i++) {
            for (size_t j = 0; j < c[i].in.size(); j++) {
            	c[i].in[j].set(i*j);
			}
        }
  	=}
}
