target Cpp;

reactor Foo(
    p1: std::vector<int>(4, 2), // list containing [2,2,2,2]
    p2: std::vector<int>{4, 2}, // list containing [4,2]

    p3: std::vector<int>(4, 2), // list containing [2,2,2,2]
    p4: std::vector<int>{4, 2}  // list containing [4,2]

    // p5: std::vector<int> = (4, 2) // disallowed
) {
    state s0: int = 2 - 2 - 2;          state s1: int(2 - 2 - 2);
    state s2: std::string = "a";    state s3: char(2 + 'a');

    private preamble{=
#include <assert.h>
    =}

    reaction(startup) {=
        assert(p1 == std::vector<int>(4, 2));
        assert(p2 == (std::vector<int> { 4, 2 }));
        assert(p3 == std::vector<int>(3, 5));
        assert(p4 == (std::vector<int> { 3, 5 }));

        assert(s0 == -2);
        assert(s1 == -2);
        assert(s2 == "a");
        assert(s3 == 'c');

        std::cerr << "Success\n";
    =}
}

main reactor {
    foo = new Foo(p3(3,5), p4{3,5});
}
