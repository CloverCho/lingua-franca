 // Check bank of reactors sending to bank of reactors.
target Cpp {
    timeout: 2 sec,
    fast: true
};
reactor Source(instance:int(0)) {
	timer t(0, 200 msec);
	output out:int;
	state s:int(0);
	reaction(t) -> out {=
        out.set(s);
   	    s += instance;
	=}
}
reactor Destination(instance:int(0)) {
	state s:int(0);
	input in:int;
	reaction(in) {=
		std::cout << "Destination " << instance << " received: " << *in.get() << "\n";
		if (*in.get() != s) {
			std::cerr << "ERROR: Expected " << s << ".\n";
			exit(1);
		}
		s += instance;
	=}
	reaction(shutdown) {=
        if (s == 0 && instance != 0) {
            std::cerr << "ERROR: Destination " << instance << " received no input!\n";
            exit(1);
        }
        std::cout << "Success.\n";
    =}
}

main reactor BankToBank(width:int(4)) {
    // FIXME: Should set the width to "width" rather than "4".
	a = new[4] Source();
	b = new[4] Destination();
	a.out -> b.in;
}