 // Check multiport output to bank of recipients.
 // Here, the bank is smaller than the width of the sending port.
target Cpp {
    timeout: 2 sec,
    fast: true
}; 
reactor Source(bank_position:int(0)) {
    output out:int;
    reaction(startup) -> out {=
        out.set(bank_position);
    =}
}
reactor Destination {
    input[3] in:int;
    state received:bool(false);
    reaction(in) {=
        for (int i = 0; i < in.size(); i++) {
            std::cout << "Destination channel " << i << " received " << *in[i].get() << ".\n";
            if (i != *in[i].get()) {
                std::cerr << "ERROR: Expected " << i << ".\n";
                exit(1);
            }
        }
        received = true;
    =}
    reaction(shutdown) {=
        if (!received) {
            std::cerr << "ERROR: Destination received no input!\n";
            exit(1);
        }
        std::cout << "Success.\n";
    =}
}

main reactor MultiportFromBank {
    a = new[3] Source();
    b = new Destination();
    a.out -> b.in;
}