// Tests the is_present variable for actions.
target Rust;

main reactor ActionIsPresent {
    logical action a;
    state success: bool(false);
    state tried: bool(false);

    reaction(startup, a) -> a {=
        if !ctx.is_action_present(a) {
            assert!(!self.tried, "Already tried, is_action_present does not work properly.");
            self.tried = true;
            // was triggered by startup
            println!("Startup reaction @ {}", ctx.display_tag(ctx.get_logical_time()));
            ctx.schedule(a, After(Duration::from_nanos(1)));
        } else {
            // was triggered by schedule above
            println!("Scheduled reaction @ {}", ctx.display_tag(ctx.get_logical_time()));
            self.success = true;
        }
    =}
    reaction(shutdown) {=
        assert!(self.success, "What happened!?");
    =}
}
