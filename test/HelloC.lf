target C; 
reactor HelloC(period:time(2 secs), message:{=char*=}("Hello C")) {
	state count:int(0);
	timer t(1 secs, period);
	action a;
	reaction(t) -> a {=
		printf("%s\n", self->message);
		schedule(a, MSEC(200));
		// If you want to print the current time, uncomment the following.
		long long time = get_logical_time();
		time_t secs = time/BILLION;
		printf("Current time is %lld\n", time);
		printf("Which is %sPlus %lld nanoseconds.\n", ctime(&secs), time % BILLION);
	=}
	reaction(a) {=
		(self->count)++;
		printf("***** action %d at time %lld\n", self->count, get_logical_time());
	=}
}
composite Inside(period:time(1 sec), message:{=char*=}("Composite default message.")) {
	third_instance = new HelloC(period = period, message = message);
}
composite Main {
	first_instance = new HelloC(period = 4 sec, message = "Hello from first_instance.");
	second_instance = new HelloC(message = "Hello from second_instance.");
	composite_instance = new Inside(message = "Hello from composite_instance.");
} 