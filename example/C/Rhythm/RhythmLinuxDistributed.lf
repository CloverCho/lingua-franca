/**
 * Demonstration of timed distributed Lingua Franca programs.
 * This program is not portable. It runs on Linux.
 * 
 * This program elaborates RhythmMac to have two players that
 * run on different machines. Both players can select a musical
 * instrument, but only one of the players can control the rhythm
 * and the tempo.
 * 
 * @see RhythmLinux
 * @see RhythmLinuxDistributedIndependent
 * @author Edward A. Lee
 * @author Soroush Bateni
 */
target C {
    coordination: centralized,
    logging: DEBUG,
    flags: ["-lncurses", "-lasound", "-lm"],
    files: ["/lib/C/util/sensor_simulator.c", "/lib/C/util/sensor_simulator.h",
            "/lib/C/util/wave_file_reader.c", "/lib/C/util/wave_file_reader.h",
            "/lib/C/util/audio_loop_linux.c", "/lib/C/util/audio_loop.h",
            "sounds/Bass-Drum-1.wav", "sounds/Hi-Bongo.wav", "sounds/Claves.wav", "sounds/High-Conga-1.wav",
            "sounds/Cowbell-1.wav", "sounds/Cuica-1.wav", "sounds/Guiro.wav",
            "sounds/Ensoniq-ESQ-1-Snare.wav", "sounds/Floor-Tom-1.wav"]
};

import RhythmSource, Player, PlayWaveform from "RhythmMacDistributed.lf"


reactor RhythmLinuxMaster {
    output rhythm_change:char;  // To change the rhythm.
    output tempo:interval_t;    // To change the tempo.
    source = new RhythmSource();
    play = new PlayWaveform();
    source.note -> play.note;
    source.instrument -> play.waveform;
    source.rhythm_change -> rhythm_change;
    source.tempo -> tempo;
}

reactor RhythmLinuxPlayer {
    input rhythm_change:char;  // To change the rhythm.
    input tempo:interval_t;    // To change the tempo.
    source = new Player();
    play = new PlayWaveform();
    source.note -> play.note;
    source.instrument -> play.waveform;
    rhythm_change -> source.rhythm_change;
    tempo -> source.tempo;
}

federated reactor at localhost {
    player1 = new RhythmLinuxMaster() at localhost;
    player2 = new RhythmLinuxPlayer() at localhost;
    player1.rhythm_change -> player2.rhythm_change after 20 msec;
    player1.tempo -> player2.tempo after 20 msec;
}
