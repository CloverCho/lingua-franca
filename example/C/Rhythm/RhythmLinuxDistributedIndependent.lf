/**
 * Demonstration of timed distributed Lingua Franca programs.
 * This program is not portable. It runs on Linux.
 * 
 * This program elaborates RhythmLinux to have two players that
 * run on different machines. Each players can select a musical
 * instrument, choose its rhythm, and control its tempo. The
 * two programs do not communicate.
 * 
 * @see RhythmLinux
 * @see RhythmLinuxDistributed
 * @author Edward A. Lee
 * @author Soroush Bateni
 */
target C {
    flags: ["-lncurses", "-lasound", "-lm"],
    coordination: decentralized,
    files: ["/lib/C/util/sensor_simulator.c", "/lib/C/util/sensor_simulator.h",
            "/lib/C/util/wave_file_reader.c", "/lib/C/util/wave_file_reader.h",
            "/lib/C/util/audio_loop_linux.c", "/lib/C/util/audio_loop.h",
            "Bass-Drum-1.wav", "Hi-Bongo.wav", "Claves.wav", "High-Conga-1.wav",
            "Cowbell-1.wav", "Cuica-1.wav", "Guiro.wav",
            "Ensoniq-ESQ-1-Snare.wav", "Floor-Tom-1.wav"] 
}; 

import RhythmSource, PlayWaveform from "RhythmMacDistributedIndependent.lf"

reactor RhythmLinuxPlayer {
    source = new RhythmSource();
    play = new PlayWaveform();
    source.note -> play.note;
    source.instrument -> play.waveform;
}

federated reactor at localhost {
    player1 = new RhythmLinuxPlayer() at localhost;
    player2 = new RhythmLinuxPlayer();
}
